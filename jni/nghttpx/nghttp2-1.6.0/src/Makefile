# Makefile.in generated by automake 1.14.1 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# nghttp2 - HTTP/2 C Library

# Copyright (c) 2012 Tatsuhiro Tsujikawa

# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:

# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.





am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/nghttp2
pkgincludedir = $(includedir)/nghttp2
pkglibdir = $(libdir)/nghttp2
pkglibexecdir = $(libexecdir)/nghttp2
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
target_triplet = x86_64-pc-linux-gnu
bin_PROGRAMS = $(am__EXEEXT_1) $(am__EXEEXT_2)
check_PROGRAMS = $(am__EXEEXT_3)
TESTS = $(am__EXEEXT_3)
am__append_1 = nghttp nghttpd nghttpx h2load
am__append_2 = HtmlParser.cc
#am__append_3 = h2load_spdy_session.cc h2load_spdy_session.h
#am__append_4 = shrpx_spdy_upstream.cc shrpx_spdy_upstream.h
#am__append_5 = \
#	shrpx_mruby.cc shrpx_mruby.h \
#	shrpx_mruby_module.cc shrpx_mruby_module.h \
#	shrpx_mruby_module_env.cc shrpx_mruby_module_env.h \
#	shrpx_mruby_module_request.cc shrpx_mruby_module_request.h \
#	shrpx_mruby_module_response.cc shrpx_mruby_module_response.h

#am__append_6 = \
#	-I${top_srcdir}/third-party/mruby/include 

#am__append_7 = -L${top_builddir}/third-party/mruby/build/lib 
#am__append_8 = -I${top_srcdir}/third-party/neverbleed
#am__append_9 = ${top_builddir}/third-party/libneverbleed.la
am__append_10 = nghttpx-unittest
#am__append_11 = \
#	-I${top_srcdir}/third-party/mruby/include 

#am__append_12 = \
#	-L${top_builddir}/third-party/mruby/build/lib 

#am__append_13 = -I${top_srcdir}/third-party/neverbleed
#am__append_14 = ${top_builddir}/third-party/libneverbleed.la
am__append_15 = nghttpx-unittest
am__append_16 = inflatehd deflatehd
subdir = src
DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(srcdir)/libnghttp2_asio.pc.in $(top_srcdir)/depcomp \
	$(top_srcdir)/test-driver
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_boost_asio.m4 \
	$(top_srcdir)/m4/ax_boost_base.m4 \
	$(top_srcdir)/m4/ax_boost_system.m4 \
	$(top_srcdir)/m4/ax_boost_thread.m4 \
	$(top_srcdir)/m4/ax_check_compile_flag.m4 \
	$(top_srcdir)/m4/ax_cxx_compile_stdcxx_11.m4 \
	$(top_srcdir)/m4/ax_have_epoll.m4 \
	$(top_srcdir)/m4/ax_python_devel.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/libxml2.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES = libnghttp2_asio.pc
CONFIG_CLEAN_VPATH_FILES =
LIBRARIES = $(noinst_LIBRARIES)
ARFLAGS = cru
AM_V_AR = $(am__v_AR_$(V))
am__v_AR_ = $(am__v_AR_$(AM_DEFAULT_VERBOSITY))
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
libnghttpx_a_AR = $(AR) $(ARFLAGS)
libnghttpx_a_LIBADD =
am__libnghttpx_a_SOURCES_DIST = util.cc util.h http2.cc http2.h \
	timegm.c timegm.h base64.h ngdns.c ngdns.h app_helper.cc \
	app_helper.h ssl.cc ssl.h shrpx_config.cc shrpx_config.h \
	shrpx_error.h shrpx_accept_handler.cc shrpx_accept_handler.h \
	shrpx_connection_handler.cc shrpx_connection_handler.h \
	shrpx_client_handler.cc shrpx_client_handler.h \
	shrpx_upstream.h shrpx_http2_upstream.cc \
	shrpx_http2_upstream.h shrpx_https_upstream.cc \
	shrpx_https_upstream.h shrpx_downstream.cc shrpx_downstream.h \
	shrpx_downstream_connection.cc shrpx_downstream_connection.h \
	shrpx_http_downstream_connection.cc \
	shrpx_http_downstream_connection.h \
	shrpx_http2_downstream_connection.cc \
	shrpx_http2_downstream_connection.h shrpx_http2_session.cc \
	shrpx_http2_session.h shrpx_downstream_queue.cc \
	shrpx_downstream_queue.h shrpx_log.cc shrpx_log.h \
	shrpx_http.cc shrpx_http.h shrpx_io_control.cc \
	shrpx_io_control.h shrpx_ssl.cc shrpx_ssl.h shrpx_worker.cc \
	shrpx_worker.h shrpx_log_config.cc shrpx_log_config.h \
	shrpx_connect_blocker.cc shrpx_connect_blocker.h \
	shrpx_downstream_connection_pool.cc \
	shrpx_downstream_connection_pool.h shrpx_rate_limit.cc \
	shrpx_rate_limit.h shrpx_connection.cc shrpx_connection.h \
	shrpx_memcached_dispatcher.cc shrpx_memcached_dispatcher.h \
	shrpx_memcached_connection.cc shrpx_memcached_connection.h \
	shrpx_memcached_request.h shrpx_memcached_result.h \
	shrpx_worker_process.cc shrpx_worker_process.h shrpx_process.h \
	shrpx_signal.cc shrpx_signal.h shrpx_router.cc shrpx_router.h \
	buffer.h memchunk.h template.h shrpx_spdy_upstream.cc \
	shrpx_spdy_upstream.h shrpx_mruby.cc shrpx_mruby.h \
	shrpx_mruby_module.cc shrpx_mruby_module.h \
	shrpx_mruby_module_env.cc shrpx_mruby_module_env.h \
	shrpx_mruby_module_request.cc shrpx_mruby_module_request.h \
	shrpx_mruby_module_response.cc shrpx_mruby_module_response.h
#am__objects_1 = libnghttpx_a-shrpx_spdy_upstream.$(OBJEXT)
#am__objects_2 = libnghttpx_a-shrpx_mruby.$(OBJEXT) \
#	libnghttpx_a-shrpx_mruby_module.$(OBJEXT) \
#	libnghttpx_a-shrpx_mruby_module_env.$(OBJEXT) \
#	libnghttpx_a-shrpx_mruby_module_request.$(OBJEXT) \
#	libnghttpx_a-shrpx_mruby_module_response.$(OBJEXT)
am__objects_3 = libnghttpx_a-util.$(OBJEXT) \
	libnghttpx_a-http2.$(OBJEXT) \
	libnghttpx_a-timegm.$(OBJEXT) \
	libnghttpx_a-ngdns.$(OBJEXT) \
	libnghttpx_a-app_helper.$(OBJEXT) \
	libnghttpx_a-ssl.$(OBJEXT) \
	libnghttpx_a-shrpx_config.$(OBJEXT) \
	libnghttpx_a-shrpx_accept_handler.$(OBJEXT) \
	libnghttpx_a-shrpx_connection_handler.$(OBJEXT) \
	libnghttpx_a-shrpx_client_handler.$(OBJEXT) \
	libnghttpx_a-shrpx_http2_upstream.$(OBJEXT) \
	libnghttpx_a-shrpx_https_upstream.$(OBJEXT) \
	libnghttpx_a-shrpx_downstream.$(OBJEXT) \
	libnghttpx_a-shrpx_downstream_connection.$(OBJEXT) \
	libnghttpx_a-shrpx_http_downstream_connection.$(OBJEXT) \
	libnghttpx_a-shrpx_http2_downstream_connection.$(OBJEXT) \
	libnghttpx_a-shrpx_http2_session.$(OBJEXT) \
	libnghttpx_a-shrpx_downstream_queue.$(OBJEXT) \
	libnghttpx_a-shrpx_log.$(OBJEXT) \
	libnghttpx_a-shrpx_http.$(OBJEXT) \
	libnghttpx_a-shrpx_io_control.$(OBJEXT) \
	libnghttpx_a-shrpx_ssl.$(OBJEXT) \
	libnghttpx_a-shrpx_worker.$(OBJEXT) \
	libnghttpx_a-shrpx_log_config.$(OBJEXT) \
	libnghttpx_a-shrpx_connect_blocker.$(OBJEXT) \
	libnghttpx_a-shrpx_downstream_connection_pool.$(OBJEXT) \
	libnghttpx_a-shrpx_rate_limit.$(OBJEXT) \
	libnghttpx_a-shrpx_connection.$(OBJEXT) \
	libnghttpx_a-shrpx_memcached_dispatcher.$(OBJEXT) \
	libnghttpx_a-shrpx_memcached_connection.$(OBJEXT) \
	libnghttpx_a-shrpx_worker_process.$(OBJEXT) \
	libnghttpx_a-shrpx_signal.$(OBJEXT) \
	libnghttpx_a-shrpx_router.$(OBJEXT) \
	$(am__objects_1) $(am__objects_2)
am_libnghttpx_a_OBJECTS = $(am__objects_3)
libnghttpx_a_OBJECTS = $(am_libnghttpx_a_OBJECTS)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(pkgconfigdir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
am__DEPENDENCIES_1 =
#libnghttp2_asio_la_DEPENDENCIES =  \
#	$(top_builddir)/lib/libnghttp2.la \
#	$(top_builddir)/third-party/libhttp-parser.la \
#	$(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1)
am__libnghttp2_asio_la_SOURCES_DIST = util.cc util.h http2.cc http2.h \
	ssl.cc ssl.h timegm.c timegm.h asio_common.cc asio_common.h \
	asio_io_service_pool.cc asio_io_service_pool.h \
	asio_server_http2.cc asio_server_http2_impl.cc \
	asio_server_http2_impl.h asio_server.cc asio_server.h \
	asio_server_http2_handler.cc asio_server_http2_handler.h \
	asio_server_connection.h asio_server_request.cc \
	asio_server_request_impl.cc asio_server_request_impl.h \
	asio_server_response.cc asio_server_response_impl.cc \
	asio_server_response_impl.h asio_server_stream.cc \
	asio_server_stream.h asio_server_serve_mux.cc \
	asio_server_serve_mux.h asio_server_request_handler.cc \
	asio_server_request_handler.h asio_server_tls_context.cc \
	asio_server_tls_context.h asio_client_session.cc \
	asio_client_session_impl.cc asio_client_session_impl.h \
	asio_client_session_tcp_impl.cc asio_client_session_tcp_impl.h \
	asio_client_session_tls_impl.cc asio_client_session_tls_impl.h \
	asio_client_response.cc asio_client_response_impl.cc \
	asio_client_response_impl.h asio_client_request.cc \
	asio_client_request_impl.cc asio_client_request_impl.h \
	asio_client_stream.cc asio_client_stream.h \
	asio_client_tls_context.cc asio_client_tls_context.h
#am_libnghttp2_asio_la_OBJECTS =  \
#	libnghttp2_asio_la-util.lo \
#	libnghttp2_asio_la-http2.lo \
#	libnghttp2_asio_la-ssl.lo \
#	libnghttp2_asio_la-timegm.lo \
#	libnghttp2_asio_la-asio_common.lo \
#	libnghttp2_asio_la-asio_io_service_pool.lo \
#	libnghttp2_asio_la-asio_server_http2.lo \
#	libnghttp2_asio_la-asio_server_http2_impl.lo \
#	libnghttp2_asio_la-asio_server.lo \
#	libnghttp2_asio_la-asio_server_http2_handler.lo \
#	libnghttp2_asio_la-asio_server_request.lo \
#	libnghttp2_asio_la-asio_server_request_impl.lo \
#	libnghttp2_asio_la-asio_server_response.lo \
#	libnghttp2_asio_la-asio_server_response_impl.lo \
#	libnghttp2_asio_la-asio_server_stream.lo \
#	libnghttp2_asio_la-asio_server_serve_mux.lo \
#	libnghttp2_asio_la-asio_server_request_handler.lo \
#	libnghttp2_asio_la-asio_server_tls_context.lo \
#	libnghttp2_asio_la-asio_client_session.lo \
#	libnghttp2_asio_la-asio_client_session_impl.lo \
#	libnghttp2_asio_la-asio_client_session_tcp_impl.lo \
#	libnghttp2_asio_la-asio_client_session_tls_impl.lo \
#	libnghttp2_asio_la-asio_client_response.lo \
#	libnghttp2_asio_la-asio_client_response_impl.lo \
#	libnghttp2_asio_la-asio_client_request.lo \
#	libnghttp2_asio_la-asio_client_request_impl.lo \
#	libnghttp2_asio_la-asio_client_stream.lo \
#	libnghttp2_asio_la-asio_client_tls_context.lo
libnghttp2_asio_la_OBJECTS = $(am_libnghttp2_asio_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
libnghttp2_asio_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(libnghttp2_asio_la_LDFLAGS) \
	$(LDFLAGS) -o $@
#am_libnghttp2_asio_la_rpath = -rpath $(libdir)
am__EXEEXT_1 = nghttp$(EXEEXT) nghttpd$(EXEEXT) \
	nghttpx$(EXEEXT) h2load$(EXEEXT)
am__EXEEXT_2 = inflatehd$(EXEEXT) \
	deflatehd$(EXEEXT)
am__EXEEXT_3 =  \
	nghttpx-unittest$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS)
am__deflatehd_SOURCES_DIST = deflatehd.cc comp_helper.c comp_helper.h
am__objects_4 = comp_helper.$(OBJEXT)
am_deflatehd_OBJECTS = deflatehd.$(OBJEXT) \
	$(am__objects_4)
deflatehd_OBJECTS = $(am_deflatehd_OBJECTS)
deflatehd_LDADD = $(LDADD)
deflatehd_DEPENDENCIES = $(top_builddir)/lib/libnghttp2.la \
	$(top_builddir)/third-party/libhttp-parser.la
am__h2load_SOURCES_DIST = util.cc util.h http2.cc http2.h h2load.cc \
	h2load.h timegm.c timegm.h ssl.cc ssl.h h2load_session.h \
	h2load_http2_session.cc h2load_http2_session.h \
	h2load_http1_session.cc h2load_http1_session.h \
	h2load_spdy_session.cc h2load_spdy_session.h
#am__objects_5 = h2load_spdy_session.$(OBJEXT)
am_h2load_OBJECTS = util.$(OBJEXT) http2.$(OBJEXT) \
	h2load.$(OBJEXT) timegm.$(OBJEXT) \
	ssl.$(OBJEXT) h2load_http2_session.$(OBJEXT) \
	h2load_http1_session.$(OBJEXT) \
	$(am__objects_5)
h2load_OBJECTS = $(am_h2load_OBJECTS)
h2load_LDADD = $(LDADD)
h2load_DEPENDENCIES = $(top_builddir)/lib/libnghttp2.la \
	$(top_builddir)/third-party/libhttp-parser.la
am__inflatehd_SOURCES_DIST = inflatehd.cc comp_helper.c comp_helper.h
am_inflatehd_OBJECTS = inflatehd.$(OBJEXT) \
	$(am__objects_4)
inflatehd_OBJECTS = $(am_inflatehd_OBJECTS)
inflatehd_LDADD = $(LDADD)
inflatehd_DEPENDENCIES = $(top_builddir)/lib/libnghttp2.la \
	$(top_builddir)/third-party/libhttp-parser.la
am__nghttp_SOURCES_DIST = util.cc http2.cc timegm.c app_helper.cc \
	nghttp2_gzip.c util.h http2.h timegm.h app_helper.h \
	nghttp2_config.h nghttp2_gzip.h nghttp.cc nghttp.h \
	HtmlParser.cc HtmlParser.h ssl.cc ssl.h
am__objects_6 = util.$(OBJEXT) http2.$(OBJEXT) \
	timegm.$(OBJEXT) app_helper.$(OBJEXT) \
	nghttp2_gzip.$(OBJEXT)
am__objects_7 =
am__objects_8 =  \
	HtmlParser.$(OBJEXT)
am__objects_9 = $(am__objects_8)
am_nghttp_OBJECTS = $(am__objects_6) $(am__objects_7) \
	nghttp.$(OBJEXT) $(am__objects_9) \
	$(am__objects_7) ssl.$(OBJEXT)
nghttp_OBJECTS = $(am_nghttp_OBJECTS)
nghttp_LDADD = $(LDADD)
nghttp_DEPENDENCIES = $(top_builddir)/lib/libnghttp2.la \
	$(top_builddir)/third-party/libhttp-parser.la
am__nghttpd_SOURCES_DIST = util.cc http2.cc timegm.c app_helper.cc \
	nghttp2_gzip.c util.h http2.h timegm.h app_helper.h \
	nghttp2_config.h nghttp2_gzip.h nghttpd.cc ssl.cc ssl.h \
	HttpServer.cc HttpServer.h
am_nghttpd_OBJECTS = $(am__objects_6) \
	$(am__objects_7) nghttpd.$(OBJEXT) \
	ssl.$(OBJEXT) HttpServer.$(OBJEXT)
nghttpd_OBJECTS = $(am_nghttpd_OBJECTS)
nghttpd_LDADD = $(LDADD)
nghttpd_DEPENDENCIES = $(top_builddir)/lib/libnghttp2.la \
	$(top_builddir)/third-party/libhttp-parser.la
am__nghttpx_SOURCES_DIST = shrpx.cc shrpx.h
am_nghttpx_OBJECTS = nghttpx-shrpx.$(OBJEXT)
nghttpx_OBJECTS = $(am_nghttpx_OBJECTS)
am__DEPENDENCIES_2 = $(top_builddir)/lib/libnghttp2.la \
	$(top_builddir)/third-party/libhttp-parser.la
nghttpx_DEPENDENCIES = libnghttpx.a \
	$(am__DEPENDENCIES_2) $(am__DEPENDENCIES_1) \
	$(am__append_9)
am__nghttpx_unittest_SOURCES_DIST = shrpx-unittest.cc \
	shrpx_ssl_test.cc shrpx_ssl_test.h shrpx_downstream_test.cc \
	shrpx_downstream_test.h shrpx_config_test.cc \
	shrpx_config_test.h http2_test.cc http2_test.h util_test.cc \
	util_test.h nghttp2_gzip_test.c nghttp2_gzip_test.h \
	nghttp2_gzip.c nghttp2_gzip.h buffer_test.cc buffer_test.h \
	memchunk_test.cc memchunk_test.h
am_nghttpx_unittest_OBJECTS = nghttpx_unittest-shrpx-unittest.$(OBJEXT) \
	nghttpx_unittest-shrpx_ssl_test.$(OBJEXT) \
	nghttpx_unittest-shrpx_downstream_test.$(OBJEXT) \
	nghttpx_unittest-shrpx_config_test.$(OBJEXT) \
	nghttpx_unittest-http2_test.$(OBJEXT) \
	nghttpx_unittest-util_test.$(OBJEXT) \
	nghttpx_unittest-nghttp2_gzip_test.$(OBJEXT) \
	nghttpx_unittest-nghttp2_gzip.$(OBJEXT) \
	nghttpx_unittest-buffer_test.$(OBJEXT) \
	nghttpx_unittest-memchunk_test.$(OBJEXT)
nghttpx_unittest_OBJECTS = $(am_nghttpx_unittest_OBJECTS)
nghttpx_unittest_DEPENDENCIES =  \
	libnghttpx.a \
	$(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_1) \
	$(am__append_14)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(libnghttpx_a_SOURCES) $(libnghttp2_asio_la_SOURCES) \
	$(deflatehd_SOURCES) $(h2load_SOURCES) $(inflatehd_SOURCES) \
	$(nghttp_SOURCES) $(nghttpd_SOURCES) $(nghttpx_SOURCES) \
	$(nghttpx_unittest_SOURCES)
DIST_SOURCES = $(am__libnghttpx_a_SOURCES_DIST) \
	$(am__libnghttp2_asio_la_SOURCES_DIST) \
	$(am__deflatehd_SOURCES_DIST) $(am__h2load_SOURCES_DIST) \
	$(am__inflatehd_SOURCES_DIST) $(am__nghttp_SOURCES_DIST) \
	$(am__nghttpd_SOURCES_DIST) $(am__nghttpx_SOURCES_DIST) \
	$(am__nghttpx_unittest_SOURCES_DIST)
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
DATA = $(pkgconfig_DATA)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	check recheck distdir
am__extra_recursive_targets = it-recursive itprep-recursive
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS =  .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = ${SHELL} /home/dai/h2/maa_h2sdk_android/jni/nghttpx/nghttp2-1.6.0/missing aclocal-1.14
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
APPLDFLAGS =  -pthread
AR = ar
AUTOCONF = ${SHELL} /home/dai/h2/maa_h2sdk_android/jni/nghttpx/nghttp2-1.6.0/missing autoconf
AUTOHEADER = ${SHELL} /home/dai/h2/maa_h2sdk_android/jni/nghttpx/nghttp2-1.6.0/missing autoheader
AUTOMAKE = ${SHELL} /home/dai/h2/maa_h2sdk_android/jni/nghttpx/nghttp2-1.6.0/missing automake-1.14
AWK = mawk
BOOST_ASIO_LIB = 
BOOST_CPPFLAGS = 
BOOST_LDFLAGS = 
BOOST_SYSTEM_LIB = 
BOOST_THREAD_LIB = 
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CUNIT_CFLAGS = 
CUNIT_LIBS = -lcunit
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2 -std=c++11
CYGPATH_W = echo
CYTHON = cython
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
EXTRACFLAG = -fvisibility=hidden
FGREP = /bin/grep -F
GREP = /bin/grep
HAVE_CXX11 = 1
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
JANSSON_CFLAGS =  
JANSSON_LIBS = -ljansson  
JEMALLOC_LIBS = -ljemalloc
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBEVENT_OPENSSL_CFLAGS =  
LIBEVENT_OPENSSL_LIBS = -levent_openssl -levent  
LIBEV_CFLAGS = 
LIBEV_LIBS = -lev
LIBMRUBY_CFLAGS = 
LIBMRUBY_LIBS = 
LIBOBJS = 
LIBS = 
LIBSPDYLAY_CFLAGS = 
LIBSPDYLAY_LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_AGE = 4
LT_CURRENT = 18
LT_REVISION = 0
MAKEINFO = ${SHELL} /home/dai/h2/maa_h2sdk_android/jni/nghttpx/nghttp2-1.6.0/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OPENSSL_CFLAGS =  
OPENSSL_LIBS = -lssl -lcrypto  
OTOOL = 
OTOOL64 = 
PACKAGE = nghttp2
PACKAGE_BUGREPORT = t-tujikawa@users.sourceforge.net
PACKAGE_NAME = nghttp2
PACKAGE_STRING = nghttp2 1.6.0
PACKAGE_TARNAME = nghttp2
PACKAGE_URL = 
PACKAGE_VERSION = 1.6.0
PACKAGE_VERSION_NUM = 0x010600
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
PYTHON = /usr/bin/python
PYTHON_CPPFLAGS = -I/usr/include/python2.7
PYTHON_EXEC_PREFIX = ${exec_prefix}
PYTHON_EXTRA_LDFLAGS = -Xlinker -export-dynamic -Wl,-O1 -Wl,-Bsymbolic-functions
PYTHON_EXTRA_LIBS = -lpthread -ldl  -lutil
PYTHON_LDFLAGS = -L/usr/lib -lpython2.7
PYTHON_PLATFORM = linux2
PYTHON_PREFIX = ${prefix}
PYTHON_SITE_PKG = /usr/lib/python2.7/dist-packages
PYTHON_VERSION = 2.7
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
TESTLDADD = 
VERSION = 1.6.0
WARNCFLAGS = 
XML2_CONFIG = /usr/bin/xml2-config
XML_CPPFLAGS = -I/usr/include/libxml2
XML_LIBS = -lxml2
ZLIB_CFLAGS =  
ZLIB_LIBS = -lz  
abs_builddir = /home/dai/h2/maa_h2sdk_android/jni/nghttpx/nghttp2-1.6.0/src
abs_srcdir = /home/dai/h2/maa_h2sdk_android/jni/nghttpx/nghttp2-1.6.0/src
abs_top_builddir = /home/dai/h2/maa_h2sdk_android/jni/nghttpx/nghttp2-1.6.0
abs_top_srcdir = /home/dai/h2/maa_h2sdk_android/jni/nghttpx/nghttp2-1.6.0
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/dai/h2/maa_h2sdk_android/jni/nghttpx/nghttp2-1.6.0/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
pkgpyexecdir = ${pyexecdir}/nghttp2
pkgpythondir = ${pythondir}/nghttp2
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
pyexecdir = ${exec_prefix}/lib/python2.7/dist-packages
pythondir = ${prefix}/lib/python2.7/dist-packages
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target = x86_64-pc-linux-gnu
target_alias = 
target_cpu = x86_64
target_os = linux-gnu
target_vendor = pc
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
# LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
SUBDIRS = includes
AM_CFLAGS = $(WARNCFLAGS)
AM_CPPFLAGS = \
	-DPKGDATADIR='"$(pkgdatadir)"' \
	-Wall \
	-I$(top_srcdir)/lib/includes \
	-I$(top_builddir)/lib/includes \
	-I$(top_srcdir)/lib \
	-I$(top_srcdir)/src/includes \
	-I$(top_srcdir)/third-party \
	 \
	-I/usr/include/libxml2	\
	 \
	  \
	  \
	  \
	-DHAVE_CONFIG_H

LDADD = $(top_builddir)/lib/libnghttp2.la \
	$(top_builddir)/third-party/libhttp-parser.la \
	-ljemalloc \
	 \
	-lxml2 \
	-lev \
	-lssl -lcrypto   \
	-ljansson   \
	-lz   \
	 -pthread

HELPER_OBJECTS = util.cc \
	http2.cc timegm.c app_helper.cc nghttp2_gzip.c

HELPER_HFILES = util.h \
	http2.h timegm.h app_helper.h nghttp2_config.h \
	nghttp2_gzip.h

HTML_PARSER_OBJECTS = $(am__append_2)
HTML_PARSER_HFILES = HtmlParser.h
nghttp_SOURCES = ${HELPER_OBJECTS} ${HELPER_HFILES} nghttp.cc nghttp.h \
	${HTML_PARSER_OBJECTS} ${HTML_PARSER_HFILES} \
	ssl.cc ssl.h

nghttpd_SOURCES = ${HELPER_OBJECTS} ${HELPER_HFILES} nghttpd.cc \
	ssl.cc ssl.h \
	HttpServer.cc HttpServer.h

h2load_SOURCES = util.cc util.h http2.cc http2.h \
	h2load.cc h2load.h timegm.c timegm.h ssl.cc \
	ssl.h h2load_session.h \
	h2load_http2_session.cc \
	h2load_http2_session.h \
	h2load_http1_session.cc \
	h2load_http1_session.h $(am__append_3)
NGHTTPX_SRCS = util.cc util.h http2.cc http2.h \
	timegm.c timegm.h base64.h ngdns.c ngdns.h \
	app_helper.cc app_helper.h ssl.cc ssl.h \
	shrpx_config.cc shrpx_config.h shrpx_error.h \
	shrpx_accept_handler.cc \
	shrpx_accept_handler.h \
	shrpx_connection_handler.cc \
	shrpx_connection_handler.h \
	shrpx_client_handler.cc \
	shrpx_client_handler.h shrpx_upstream.h \
	shrpx_http2_upstream.cc \
	shrpx_http2_upstream.h \
	shrpx_https_upstream.cc \
	shrpx_https_upstream.h shrpx_downstream.cc \
	shrpx_downstream.h \
	shrpx_downstream_connection.cc \
	shrpx_downstream_connection.h \
	shrpx_http_downstream_connection.cc \
	shrpx_http_downstream_connection.h \
	shrpx_http2_downstream_connection.cc \
	shrpx_http2_downstream_connection.h \
	shrpx_http2_session.cc shrpx_http2_session.h \
	shrpx_downstream_queue.cc \
	shrpx_downstream_queue.h shrpx_log.cc \
	shrpx_log.h shrpx_http.cc shrpx_http.h \
	shrpx_io_control.cc shrpx_io_control.h \
	shrpx_ssl.cc shrpx_ssl.h shrpx_worker.cc \
	shrpx_worker.h shrpx_log_config.cc \
	shrpx_log_config.h shrpx_connect_blocker.cc \
	shrpx_connect_blocker.h \
	shrpx_downstream_connection_pool.cc \
	shrpx_downstream_connection_pool.h \
	shrpx_rate_limit.cc shrpx_rate_limit.h \
	shrpx_connection.cc shrpx_connection.h \
	shrpx_memcached_dispatcher.cc \
	shrpx_memcached_dispatcher.h \
	shrpx_memcached_connection.cc \
	shrpx_memcached_connection.h \
	shrpx_memcached_request.h \
	shrpx_memcached_result.h \
	shrpx_worker_process.cc \
	shrpx_worker_process.h shrpx_process.h \
	shrpx_signal.cc shrpx_signal.h \
	shrpx_router.cc shrpx_router.h buffer.h \
	memchunk.h template.h $(am__append_4) \
	$(am__append_5)
noinst_LIBRARIES = libnghttpx.a
libnghttpx_a_SOURCES = ${NGHTTPX_SRCS}
libnghttpx_a_CPPFLAGS = ${AM_CPPFLAGS} \
	$(am__append_6) $(am__append_8)
nghttpx_SOURCES = shrpx.cc shrpx.h
nghttpx_CPPFLAGS = ${libnghttpx_a_CPPFLAGS}
nghttpx_LDADD = libnghttpx.a ${LDADD} $(am__append_7) \
	$(am__append_9)
nghttpx_unittest_SOURCES = shrpx-unittest.cc \
	shrpx_ssl_test.cc shrpx_ssl_test.h \
	shrpx_downstream_test.cc shrpx_downstream_test.h \
	shrpx_config_test.cc shrpx_config_test.h \
	http2_test.cc http2_test.h \
	util_test.cc util_test.h \
	nghttp2_gzip_test.c nghttp2_gzip_test.h \
	nghttp2_gzip.c nghttp2_gzip.h \
	buffer_test.cc buffer_test.h \
	memchunk_test.cc memchunk_test.h

nghttpx_unittest_CPPFLAGS =  \
	${AM_CPPFLAGS} \
	-DNGHTTP2_TESTS_DIR=\"$(top_srcdir)/tests\" \
	$(am__append_11) \
	$(am__append_13)
nghttpx_unittest_LDADD =  \
	libnghttpx.a ${LDADD} \
	-lcunit  \
	$(am__append_12) \
	$(am__append_14)
HPACK_TOOLS_COMMON_SRCS = comp_helper.c comp_helper.h
inflatehd_SOURCES = inflatehd.cc $(HPACK_TOOLS_COMMON_SRCS)
deflatehd_SOURCES = deflatehd.cc $(HPACK_TOOLS_COMMON_SRCS)
#pkgconfigdir = $(libdir)/pkgconfig
#pkgconfig_DATA = libnghttp2_asio.pc
#DISTCLEANFILES = $(pkgconfig_DATA)
#lib_LTLIBRARIES = libnghttp2_asio.la
#libnghttp2_asio_la_SOURCES = \
#	util.cc util.h http2.cc http2.h \
#	ssl.cc ssl.h \
#	timegm.c timegm.h \
#	asio_common.cc asio_common.h \
#	asio_io_service_pool.cc asio_io_service_pool.h \
#	asio_server_http2.cc \
#	asio_server_http2_impl.cc asio_server_http2_impl.h \
#	asio_server.cc asio_server.h \
#	asio_server_http2_handler.cc asio_server_http2_handler.h \
#	asio_server_connection.h \
#	asio_server_request.cc \
#	asio_server_request_impl.cc asio_server_request_impl.h \
#	asio_server_response.cc \
#	asio_server_response_impl.cc asio_server_response_impl.h \
#	asio_server_stream.cc asio_server_stream.h \
#	asio_server_serve_mux.cc asio_server_serve_mux.h \
#	asio_server_request_handler.cc asio_server_request_handler.h \
#	asio_server_tls_context.cc asio_server_tls_context.h \
#	asio_client_session.cc \
#	asio_client_session_impl.cc asio_client_session_impl.h \
#	asio_client_session_tcp_impl.cc asio_client_session_tcp_impl.h \
#	asio_client_session_tls_impl.cc asio_client_session_tls_impl.h \
#	asio_client_response.cc \
#	asio_client_response_impl.cc asio_client_response_impl.h \
#	asio_client_request.cc \
#	asio_client_request_impl.cc asio_client_request_impl.h \
#	asio_client_stream.cc asio_client_stream.h \
#	asio_client_tls_context.cc asio_client_tls_context.h

#libnghttp2_asio_la_CPPFLAGS = ${AM_CPPFLAGS} ${BOOST_CPPFLAGS}
#libnghttp2_asio_la_LDFLAGS = -no-undefined -version-info 1:0:0
#libnghttp2_asio_la_LIBADD = \
#	$(top_builddir)/lib/libnghttp2.la \
#	$(top_builddir)/third-party/libhttp-parser.la \
#	-lssl -lcrypto   \
#	${BOOST_LDFLAGS} \
#	${BOOST_ASIO_LIB} \
#	${BOOST_THREAD_LIB} \
#	${BOOST_SYSTEM_LIB}

all: all-recursive

.SUFFIXES:
.SUFFIXES: .c .cc .lo .log .o .obj .test .test$(EXEEXT) .trs
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
libnghttp2_asio.pc: $(top_builddir)/config.status $(srcdir)/libnghttp2_asio.pc.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)

libnghttpx.a: $(libnghttpx_a_OBJECTS) $(libnghttpx_a_DEPENDENCIES) $(EXTRA_libnghttpx_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libnghttpx.a
	$(AM_V_AR)$(libnghttpx_a_AR) libnghttpx.a $(libnghttpx_a_OBJECTS) $(libnghttpx_a_LIBADD)
	$(AM_V_at)$(RANLIB) libnghttpx.a

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libnghttp2_asio.la: $(libnghttp2_asio_la_OBJECTS) $(libnghttp2_asio_la_DEPENDENCIES) $(EXTRA_libnghttp2_asio_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(libnghttp2_asio_la_LINK) $(am_libnghttp2_asio_la_rpath) $(libnghttp2_asio_la_OBJECTS) $(libnghttp2_asio_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

deflatehd$(EXEEXT): $(deflatehd_OBJECTS) $(deflatehd_DEPENDENCIES) $(EXTRA_deflatehd_DEPENDENCIES) 
	@rm -f deflatehd$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(deflatehd_OBJECTS) $(deflatehd_LDADD) $(LIBS)

h2load$(EXEEXT): $(h2load_OBJECTS) $(h2load_DEPENDENCIES) $(EXTRA_h2load_DEPENDENCIES) 
	@rm -f h2load$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(h2load_OBJECTS) $(h2load_LDADD) $(LIBS)

inflatehd$(EXEEXT): $(inflatehd_OBJECTS) $(inflatehd_DEPENDENCIES) $(EXTRA_inflatehd_DEPENDENCIES) 
	@rm -f inflatehd$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(inflatehd_OBJECTS) $(inflatehd_LDADD) $(LIBS)

nghttp$(EXEEXT): $(nghttp_OBJECTS) $(nghttp_DEPENDENCIES) $(EXTRA_nghttp_DEPENDENCIES) 
	@rm -f nghttp$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(nghttp_OBJECTS) $(nghttp_LDADD) $(LIBS)

nghttpd$(EXEEXT): $(nghttpd_OBJECTS) $(nghttpd_DEPENDENCIES) $(EXTRA_nghttpd_DEPENDENCIES) 
	@rm -f nghttpd$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(nghttpd_OBJECTS) $(nghttpd_LDADD) $(LIBS)

nghttpx$(EXEEXT): $(nghttpx_OBJECTS) $(nghttpx_DEPENDENCIES) $(EXTRA_nghttpx_DEPENDENCIES) 
	@rm -f nghttpx$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(nghttpx_OBJECTS) $(nghttpx_LDADD) $(LIBS)

nghttpx-unittest$(EXEEXT): $(nghttpx_unittest_OBJECTS) $(nghttpx_unittest_DEPENDENCIES) $(EXTRA_nghttpx_unittest_DEPENDENCIES) 
	@rm -f nghttpx-unittest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(nghttpx_unittest_OBJECTS) $(nghttpx_unittest_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/HtmlParser.Po
include ./$(DEPDIR)/HttpServer.Po
include ./$(DEPDIR)/app_helper.Po
include ./$(DEPDIR)/comp_helper.Po
include ./$(DEPDIR)/deflatehd.Po
include ./$(DEPDIR)/h2load.Po
include ./$(DEPDIR)/h2load_http1_session.Po
include ./$(DEPDIR)/h2load_http2_session.Po
include ./$(DEPDIR)/h2load_spdy_session.Po
include ./$(DEPDIR)/http2.Po
include ./$(DEPDIR)/inflatehd.Po
include ./$(DEPDIR)/libnghttp2_asio_la-asio_client_request.Plo
include ./$(DEPDIR)/libnghttp2_asio_la-asio_client_request_impl.Plo
include ./$(DEPDIR)/libnghttp2_asio_la-asio_client_response.Plo
include ./$(DEPDIR)/libnghttp2_asio_la-asio_client_response_impl.Plo
include ./$(DEPDIR)/libnghttp2_asio_la-asio_client_session.Plo
include ./$(DEPDIR)/libnghttp2_asio_la-asio_client_session_impl.Plo
include ./$(DEPDIR)/libnghttp2_asio_la-asio_client_session_tcp_impl.Plo
include ./$(DEPDIR)/libnghttp2_asio_la-asio_client_session_tls_impl.Plo
include ./$(DEPDIR)/libnghttp2_asio_la-asio_client_stream.Plo
include ./$(DEPDIR)/libnghttp2_asio_la-asio_client_tls_context.Plo
include ./$(DEPDIR)/libnghttp2_asio_la-asio_common.Plo
include ./$(DEPDIR)/libnghttp2_asio_la-asio_io_service_pool.Plo
include ./$(DEPDIR)/libnghttp2_asio_la-asio_server.Plo
include ./$(DEPDIR)/libnghttp2_asio_la-asio_server_http2.Plo
include ./$(DEPDIR)/libnghttp2_asio_la-asio_server_http2_handler.Plo
include ./$(DEPDIR)/libnghttp2_asio_la-asio_server_http2_impl.Plo
include ./$(DEPDIR)/libnghttp2_asio_la-asio_server_request.Plo
include ./$(DEPDIR)/libnghttp2_asio_la-asio_server_request_handler.Plo
include ./$(DEPDIR)/libnghttp2_asio_la-asio_server_request_impl.Plo
include ./$(DEPDIR)/libnghttp2_asio_la-asio_server_response.Plo
include ./$(DEPDIR)/libnghttp2_asio_la-asio_server_response_impl.Plo
include ./$(DEPDIR)/libnghttp2_asio_la-asio_server_serve_mux.Plo
include ./$(DEPDIR)/libnghttp2_asio_la-asio_server_stream.Plo
include ./$(DEPDIR)/libnghttp2_asio_la-asio_server_tls_context.Plo
include ./$(DEPDIR)/libnghttp2_asio_la-http2.Plo
include ./$(DEPDIR)/libnghttp2_asio_la-ssl.Plo
include ./$(DEPDIR)/libnghttp2_asio_la-timegm.Plo
include ./$(DEPDIR)/libnghttp2_asio_la-util.Plo
include ./$(DEPDIR)/libnghttpx_a-app_helper.Po
include ./$(DEPDIR)/libnghttpx_a-http2.Po
include ./$(DEPDIR)/libnghttpx_a-ngdns.Po
include ./$(DEPDIR)/libnghttpx_a-shrpx_accept_handler.Po
include ./$(DEPDIR)/libnghttpx_a-shrpx_client_handler.Po
include ./$(DEPDIR)/libnghttpx_a-shrpx_config.Po
include ./$(DEPDIR)/libnghttpx_a-shrpx_connect_blocker.Po
include ./$(DEPDIR)/libnghttpx_a-shrpx_connection.Po
include ./$(DEPDIR)/libnghttpx_a-shrpx_connection_handler.Po
include ./$(DEPDIR)/libnghttpx_a-shrpx_downstream.Po
include ./$(DEPDIR)/libnghttpx_a-shrpx_downstream_connection.Po
include ./$(DEPDIR)/libnghttpx_a-shrpx_downstream_connection_pool.Po
include ./$(DEPDIR)/libnghttpx_a-shrpx_downstream_queue.Po
include ./$(DEPDIR)/libnghttpx_a-shrpx_http.Po
include ./$(DEPDIR)/libnghttpx_a-shrpx_http2_downstream_connection.Po
include ./$(DEPDIR)/libnghttpx_a-shrpx_http2_session.Po
include ./$(DEPDIR)/libnghttpx_a-shrpx_http2_upstream.Po
include ./$(DEPDIR)/libnghttpx_a-shrpx_http_downstream_connection.Po
include ./$(DEPDIR)/libnghttpx_a-shrpx_https_upstream.Po
include ./$(DEPDIR)/libnghttpx_a-shrpx_io_control.Po
include ./$(DEPDIR)/libnghttpx_a-shrpx_log.Po
include ./$(DEPDIR)/libnghttpx_a-shrpx_log_config.Po
include ./$(DEPDIR)/libnghttpx_a-shrpx_memcached_connection.Po
include ./$(DEPDIR)/libnghttpx_a-shrpx_memcached_dispatcher.Po
include ./$(DEPDIR)/libnghttpx_a-shrpx_mruby.Po
include ./$(DEPDIR)/libnghttpx_a-shrpx_mruby_module.Po
include ./$(DEPDIR)/libnghttpx_a-shrpx_mruby_module_env.Po
include ./$(DEPDIR)/libnghttpx_a-shrpx_mruby_module_request.Po
include ./$(DEPDIR)/libnghttpx_a-shrpx_mruby_module_response.Po
include ./$(DEPDIR)/libnghttpx_a-shrpx_rate_limit.Po
include ./$(DEPDIR)/libnghttpx_a-shrpx_router.Po
include ./$(DEPDIR)/libnghttpx_a-shrpx_signal.Po
include ./$(DEPDIR)/libnghttpx_a-shrpx_spdy_upstream.Po
include ./$(DEPDIR)/libnghttpx_a-shrpx_ssl.Po
include ./$(DEPDIR)/libnghttpx_a-shrpx_worker.Po
include ./$(DEPDIR)/libnghttpx_a-shrpx_worker_process.Po
include ./$(DEPDIR)/libnghttpx_a-ssl.Po
include ./$(DEPDIR)/libnghttpx_a-timegm.Po
include ./$(DEPDIR)/libnghttpx_a-util.Po
include ./$(DEPDIR)/nghttp.Po
include ./$(DEPDIR)/nghttp2_gzip.Po
include ./$(DEPDIR)/nghttpd.Po
include ./$(DEPDIR)/nghttpx-shrpx.Po
include ./$(DEPDIR)/nghttpx_unittest-buffer_test.Po
include ./$(DEPDIR)/nghttpx_unittest-http2_test.Po
include ./$(DEPDIR)/nghttpx_unittest-memchunk_test.Po
include ./$(DEPDIR)/nghttpx_unittest-nghttp2_gzip.Po
include ./$(DEPDIR)/nghttpx_unittest-nghttp2_gzip_test.Po
include ./$(DEPDIR)/nghttpx_unittest-shrpx-unittest.Po
include ./$(DEPDIR)/nghttpx_unittest-shrpx_config_test.Po
include ./$(DEPDIR)/nghttpx_unittest-shrpx_downstream_test.Po
include ./$(DEPDIR)/nghttpx_unittest-shrpx_ssl_test.Po
include ./$(DEPDIR)/nghttpx_unittest-util_test.Po
include ./$(DEPDIR)/ssl.Po
include ./$(DEPDIR)/timegm.Po
include ./$(DEPDIR)/util.Po

.c.o:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

libnghttpx_a-timegm.o: timegm.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libnghttpx_a-timegm.o -MD -MP -MF $(DEPDIR)/libnghttpx_a-timegm.Tpo -c -o libnghttpx_a-timegm.o `test -f 'timegm.c' || echo '$(srcdir)/'`timegm.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-timegm.Tpo $(DEPDIR)/libnghttpx_a-timegm.Po
#	$(AM_V_CC)source='timegm.c' object='libnghttpx_a-timegm.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libnghttpx_a-timegm.o `test -f 'timegm.c' || echo '$(srcdir)/'`timegm.c

libnghttpx_a-timegm.obj: timegm.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libnghttpx_a-timegm.obj -MD -MP -MF $(DEPDIR)/libnghttpx_a-timegm.Tpo -c -o libnghttpx_a-timegm.obj `if test -f 'timegm.c'; then $(CYGPATH_W) 'timegm.c'; else $(CYGPATH_W) '$(srcdir)/timegm.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-timegm.Tpo $(DEPDIR)/libnghttpx_a-timegm.Po
#	$(AM_V_CC)source='timegm.c' object='libnghttpx_a-timegm.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libnghttpx_a-timegm.obj `if test -f 'timegm.c'; then $(CYGPATH_W) 'timegm.c'; else $(CYGPATH_W) '$(srcdir)/timegm.c'; fi`

libnghttpx_a-ngdns.o: ngdns.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libnghttpx_a-ngdns.o -MD -MP -MF $(DEPDIR)/libnghttpx_a-ngdns.Tpo -c -o libnghttpx_a-ngdns.o `test -f 'ngdns.c' || echo '$(srcdir)/'`ngdns.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-ngdns.Tpo $(DEPDIR)/libnghttpx_a-ngdns.Po
#	$(AM_V_CC)source='ngdns.c' object='libnghttpx_a-ngdns.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libnghttpx_a-ngdns.o `test -f 'ngdns.c' || echo '$(srcdir)/'`ngdns.c

libnghttpx_a-ngdns.obj: ngdns.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libnghttpx_a-ngdns.obj -MD -MP -MF $(DEPDIR)/libnghttpx_a-ngdns.Tpo -c -o libnghttpx_a-ngdns.obj `if test -f 'ngdns.c'; then $(CYGPATH_W) 'ngdns.c'; else $(CYGPATH_W) '$(srcdir)/ngdns.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-ngdns.Tpo $(DEPDIR)/libnghttpx_a-ngdns.Po
#	$(AM_V_CC)source='ngdns.c' object='libnghttpx_a-ngdns.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libnghttpx_a-ngdns.obj `if test -f 'ngdns.c'; then $(CYGPATH_W) 'ngdns.c'; else $(CYGPATH_W) '$(srcdir)/ngdns.c'; fi`

libnghttp2_asio_la-timegm.lo: timegm.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttp2_asio_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libnghttp2_asio_la-timegm.lo -MD -MP -MF $(DEPDIR)/libnghttp2_asio_la-timegm.Tpo -c -o libnghttp2_asio_la-timegm.lo `test -f 'timegm.c' || echo '$(srcdir)/'`timegm.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttp2_asio_la-timegm.Tpo $(DEPDIR)/libnghttp2_asio_la-timegm.Plo
#	$(AM_V_CC)source='timegm.c' object='libnghttp2_asio_la-timegm.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttp2_asio_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libnghttp2_asio_la-timegm.lo `test -f 'timegm.c' || echo '$(srcdir)/'`timegm.c

nghttpx_unittest-nghttp2_gzip_test.o: nghttp2_gzip_test.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(nghttpx_unittest_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT nghttpx_unittest-nghttp2_gzip_test.o -MD -MP -MF $(DEPDIR)/nghttpx_unittest-nghttp2_gzip_test.Tpo -c -o nghttpx_unittest-nghttp2_gzip_test.o `test -f 'nghttp2_gzip_test.c' || echo '$(srcdir)/'`nghttp2_gzip_test.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/nghttpx_unittest-nghttp2_gzip_test.Tpo $(DEPDIR)/nghttpx_unittest-nghttp2_gzip_test.Po
#	$(AM_V_CC)source='nghttp2_gzip_test.c' object='nghttpx_unittest-nghttp2_gzip_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(nghttpx_unittest_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o nghttpx_unittest-nghttp2_gzip_test.o `test -f 'nghttp2_gzip_test.c' || echo '$(srcdir)/'`nghttp2_gzip_test.c

nghttpx_unittest-nghttp2_gzip_test.obj: nghttp2_gzip_test.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(nghttpx_unittest_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT nghttpx_unittest-nghttp2_gzip_test.obj -MD -MP -MF $(DEPDIR)/nghttpx_unittest-nghttp2_gzip_test.Tpo -c -o nghttpx_unittest-nghttp2_gzip_test.obj `if test -f 'nghttp2_gzip_test.c'; then $(CYGPATH_W) 'nghttp2_gzip_test.c'; else $(CYGPATH_W) '$(srcdir)/nghttp2_gzip_test.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/nghttpx_unittest-nghttp2_gzip_test.Tpo $(DEPDIR)/nghttpx_unittest-nghttp2_gzip_test.Po
#	$(AM_V_CC)source='nghttp2_gzip_test.c' object='nghttpx_unittest-nghttp2_gzip_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(nghttpx_unittest_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o nghttpx_unittest-nghttp2_gzip_test.obj `if test -f 'nghttp2_gzip_test.c'; then $(CYGPATH_W) 'nghttp2_gzip_test.c'; else $(CYGPATH_W) '$(srcdir)/nghttp2_gzip_test.c'; fi`

nghttpx_unittest-nghttp2_gzip.o: nghttp2_gzip.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(nghttpx_unittest_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT nghttpx_unittest-nghttp2_gzip.o -MD -MP -MF $(DEPDIR)/nghttpx_unittest-nghttp2_gzip.Tpo -c -o nghttpx_unittest-nghttp2_gzip.o `test -f 'nghttp2_gzip.c' || echo '$(srcdir)/'`nghttp2_gzip.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/nghttpx_unittest-nghttp2_gzip.Tpo $(DEPDIR)/nghttpx_unittest-nghttp2_gzip.Po
#	$(AM_V_CC)source='nghttp2_gzip.c' object='nghttpx_unittest-nghttp2_gzip.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(nghttpx_unittest_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o nghttpx_unittest-nghttp2_gzip.o `test -f 'nghttp2_gzip.c' || echo '$(srcdir)/'`nghttp2_gzip.c

nghttpx_unittest-nghttp2_gzip.obj: nghttp2_gzip.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(nghttpx_unittest_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT nghttpx_unittest-nghttp2_gzip.obj -MD -MP -MF $(DEPDIR)/nghttpx_unittest-nghttp2_gzip.Tpo -c -o nghttpx_unittest-nghttp2_gzip.obj `if test -f 'nghttp2_gzip.c'; then $(CYGPATH_W) 'nghttp2_gzip.c'; else $(CYGPATH_W) '$(srcdir)/nghttp2_gzip.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/nghttpx_unittest-nghttp2_gzip.Tpo $(DEPDIR)/nghttpx_unittest-nghttp2_gzip.Po
#	$(AM_V_CC)source='nghttp2_gzip.c' object='nghttpx_unittest-nghttp2_gzip.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(nghttpx_unittest_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o nghttpx_unittest-nghttp2_gzip.obj `if test -f 'nghttp2_gzip.c'; then $(CYGPATH_W) 'nghttp2_gzip.c'; else $(CYGPATH_W) '$(srcdir)/nghttp2_gzip.c'; fi`

.cc.o:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

libnghttpx_a-util.o: util.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-util.o -MD -MP -MF $(DEPDIR)/libnghttpx_a-util.Tpo -c -o libnghttpx_a-util.o `test -f 'util.cc' || echo '$(srcdir)/'`util.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-util.Tpo $(DEPDIR)/libnghttpx_a-util.Po
#	$(AM_V_CXX)source='util.cc' object='libnghttpx_a-util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-util.o `test -f 'util.cc' || echo '$(srcdir)/'`util.cc

libnghttpx_a-util.obj: util.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-util.obj -MD -MP -MF $(DEPDIR)/libnghttpx_a-util.Tpo -c -o libnghttpx_a-util.obj `if test -f 'util.cc'; then $(CYGPATH_W) 'util.cc'; else $(CYGPATH_W) '$(srcdir)/util.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-util.Tpo $(DEPDIR)/libnghttpx_a-util.Po
#	$(AM_V_CXX)source='util.cc' object='libnghttpx_a-util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-util.obj `if test -f 'util.cc'; then $(CYGPATH_W) 'util.cc'; else $(CYGPATH_W) '$(srcdir)/util.cc'; fi`

libnghttpx_a-http2.o: http2.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-http2.o -MD -MP -MF $(DEPDIR)/libnghttpx_a-http2.Tpo -c -o libnghttpx_a-http2.o `test -f 'http2.cc' || echo '$(srcdir)/'`http2.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-http2.Tpo $(DEPDIR)/libnghttpx_a-http2.Po
#	$(AM_V_CXX)source='http2.cc' object='libnghttpx_a-http2.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-http2.o `test -f 'http2.cc' || echo '$(srcdir)/'`http2.cc

libnghttpx_a-http2.obj: http2.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-http2.obj -MD -MP -MF $(DEPDIR)/libnghttpx_a-http2.Tpo -c -o libnghttpx_a-http2.obj `if test -f 'http2.cc'; then $(CYGPATH_W) 'http2.cc'; else $(CYGPATH_W) '$(srcdir)/http2.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-http2.Tpo $(DEPDIR)/libnghttpx_a-http2.Po
#	$(AM_V_CXX)source='http2.cc' object='libnghttpx_a-http2.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-http2.obj `if test -f 'http2.cc'; then $(CYGPATH_W) 'http2.cc'; else $(CYGPATH_W) '$(srcdir)/http2.cc'; fi`

libnghttpx_a-app_helper.o: app_helper.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-app_helper.o -MD -MP -MF $(DEPDIR)/libnghttpx_a-app_helper.Tpo -c -o libnghttpx_a-app_helper.o `test -f 'app_helper.cc' || echo '$(srcdir)/'`app_helper.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-app_helper.Tpo $(DEPDIR)/libnghttpx_a-app_helper.Po
#	$(AM_V_CXX)source='app_helper.cc' object='libnghttpx_a-app_helper.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-app_helper.o `test -f 'app_helper.cc' || echo '$(srcdir)/'`app_helper.cc

libnghttpx_a-app_helper.obj: app_helper.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-app_helper.obj -MD -MP -MF $(DEPDIR)/libnghttpx_a-app_helper.Tpo -c -o libnghttpx_a-app_helper.obj `if test -f 'app_helper.cc'; then $(CYGPATH_W) 'app_helper.cc'; else $(CYGPATH_W) '$(srcdir)/app_helper.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-app_helper.Tpo $(DEPDIR)/libnghttpx_a-app_helper.Po
#	$(AM_V_CXX)source='app_helper.cc' object='libnghttpx_a-app_helper.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-app_helper.obj `if test -f 'app_helper.cc'; then $(CYGPATH_W) 'app_helper.cc'; else $(CYGPATH_W) '$(srcdir)/app_helper.cc'; fi`

libnghttpx_a-ssl.o: ssl.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-ssl.o -MD -MP -MF $(DEPDIR)/libnghttpx_a-ssl.Tpo -c -o libnghttpx_a-ssl.o `test -f 'ssl.cc' || echo '$(srcdir)/'`ssl.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-ssl.Tpo $(DEPDIR)/libnghttpx_a-ssl.Po
#	$(AM_V_CXX)source='ssl.cc' object='libnghttpx_a-ssl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-ssl.o `test -f 'ssl.cc' || echo '$(srcdir)/'`ssl.cc

libnghttpx_a-ssl.obj: ssl.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-ssl.obj -MD -MP -MF $(DEPDIR)/libnghttpx_a-ssl.Tpo -c -o libnghttpx_a-ssl.obj `if test -f 'ssl.cc'; then $(CYGPATH_W) 'ssl.cc'; else $(CYGPATH_W) '$(srcdir)/ssl.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-ssl.Tpo $(DEPDIR)/libnghttpx_a-ssl.Po
#	$(AM_V_CXX)source='ssl.cc' object='libnghttpx_a-ssl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-ssl.obj `if test -f 'ssl.cc'; then $(CYGPATH_W) 'ssl.cc'; else $(CYGPATH_W) '$(srcdir)/ssl.cc'; fi`

libnghttpx_a-shrpx_config.o: shrpx_config.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-shrpx_config.o -MD -MP -MF $(DEPDIR)/libnghttpx_a-shrpx_config.Tpo -c -o libnghttpx_a-shrpx_config.o `test -f 'shrpx_config.cc' || echo '$(srcdir)/'`shrpx_config.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-shrpx_config.Tpo $(DEPDIR)/libnghttpx_a-shrpx_config.Po
#	$(AM_V_CXX)source='shrpx_config.cc' object='libnghttpx_a-shrpx_config.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-shrpx_config.o `test -f 'shrpx_config.cc' || echo '$(srcdir)/'`shrpx_config.cc

libnghttpx_a-shrpx_config.obj: shrpx_config.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-shrpx_config.obj -MD -MP -MF $(DEPDIR)/libnghttpx_a-shrpx_config.Tpo -c -o libnghttpx_a-shrpx_config.obj `if test -f 'shrpx_config.cc'; then $(CYGPATH_W) 'shrpx_config.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx_config.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-shrpx_config.Tpo $(DEPDIR)/libnghttpx_a-shrpx_config.Po
#	$(AM_V_CXX)source='shrpx_config.cc' object='libnghttpx_a-shrpx_config.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-shrpx_config.obj `if test -f 'shrpx_config.cc'; then $(CYGPATH_W) 'shrpx_config.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx_config.cc'; fi`

libnghttpx_a-shrpx_accept_handler.o: shrpx_accept_handler.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-shrpx_accept_handler.o -MD -MP -MF $(DEPDIR)/libnghttpx_a-shrpx_accept_handler.Tpo -c -o libnghttpx_a-shrpx_accept_handler.o `test -f 'shrpx_accept_handler.cc' || echo '$(srcdir)/'`shrpx_accept_handler.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-shrpx_accept_handler.Tpo $(DEPDIR)/libnghttpx_a-shrpx_accept_handler.Po
#	$(AM_V_CXX)source='shrpx_accept_handler.cc' object='libnghttpx_a-shrpx_accept_handler.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-shrpx_accept_handler.o `test -f 'shrpx_accept_handler.cc' || echo '$(srcdir)/'`shrpx_accept_handler.cc

libnghttpx_a-shrpx_accept_handler.obj: shrpx_accept_handler.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-shrpx_accept_handler.obj -MD -MP -MF $(DEPDIR)/libnghttpx_a-shrpx_accept_handler.Tpo -c -o libnghttpx_a-shrpx_accept_handler.obj `if test -f 'shrpx_accept_handler.cc'; then $(CYGPATH_W) 'shrpx_accept_handler.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx_accept_handler.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-shrpx_accept_handler.Tpo $(DEPDIR)/libnghttpx_a-shrpx_accept_handler.Po
#	$(AM_V_CXX)source='shrpx_accept_handler.cc' object='libnghttpx_a-shrpx_accept_handler.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-shrpx_accept_handler.obj `if test -f 'shrpx_accept_handler.cc'; then $(CYGPATH_W) 'shrpx_accept_handler.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx_accept_handler.cc'; fi`

libnghttpx_a-shrpx_connection_handler.o: shrpx_connection_handler.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-shrpx_connection_handler.o -MD -MP -MF $(DEPDIR)/libnghttpx_a-shrpx_connection_handler.Tpo -c -o libnghttpx_a-shrpx_connection_handler.o `test -f 'shrpx_connection_handler.cc' || echo '$(srcdir)/'`shrpx_connection_handler.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-shrpx_connection_handler.Tpo $(DEPDIR)/libnghttpx_a-shrpx_connection_handler.Po
#	$(AM_V_CXX)source='shrpx_connection_handler.cc' object='libnghttpx_a-shrpx_connection_handler.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-shrpx_connection_handler.o `test -f 'shrpx_connection_handler.cc' || echo '$(srcdir)/'`shrpx_connection_handler.cc

libnghttpx_a-shrpx_connection_handler.obj: shrpx_connection_handler.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-shrpx_connection_handler.obj -MD -MP -MF $(DEPDIR)/libnghttpx_a-shrpx_connection_handler.Tpo -c -o libnghttpx_a-shrpx_connection_handler.obj `if test -f 'shrpx_connection_handler.cc'; then $(CYGPATH_W) 'shrpx_connection_handler.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx_connection_handler.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-shrpx_connection_handler.Tpo $(DEPDIR)/libnghttpx_a-shrpx_connection_handler.Po
#	$(AM_V_CXX)source='shrpx_connection_handler.cc' object='libnghttpx_a-shrpx_connection_handler.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-shrpx_connection_handler.obj `if test -f 'shrpx_connection_handler.cc'; then $(CYGPATH_W) 'shrpx_connection_handler.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx_connection_handler.cc'; fi`

libnghttpx_a-shrpx_client_handler.o: shrpx_client_handler.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-shrpx_client_handler.o -MD -MP -MF $(DEPDIR)/libnghttpx_a-shrpx_client_handler.Tpo -c -o libnghttpx_a-shrpx_client_handler.o `test -f 'shrpx_client_handler.cc' || echo '$(srcdir)/'`shrpx_client_handler.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-shrpx_client_handler.Tpo $(DEPDIR)/libnghttpx_a-shrpx_client_handler.Po
#	$(AM_V_CXX)source='shrpx_client_handler.cc' object='libnghttpx_a-shrpx_client_handler.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-shrpx_client_handler.o `test -f 'shrpx_client_handler.cc' || echo '$(srcdir)/'`shrpx_client_handler.cc

libnghttpx_a-shrpx_client_handler.obj: shrpx_client_handler.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-shrpx_client_handler.obj -MD -MP -MF $(DEPDIR)/libnghttpx_a-shrpx_client_handler.Tpo -c -o libnghttpx_a-shrpx_client_handler.obj `if test -f 'shrpx_client_handler.cc'; then $(CYGPATH_W) 'shrpx_client_handler.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx_client_handler.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-shrpx_client_handler.Tpo $(DEPDIR)/libnghttpx_a-shrpx_client_handler.Po
#	$(AM_V_CXX)source='shrpx_client_handler.cc' object='libnghttpx_a-shrpx_client_handler.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-shrpx_client_handler.obj `if test -f 'shrpx_client_handler.cc'; then $(CYGPATH_W) 'shrpx_client_handler.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx_client_handler.cc'; fi`

libnghttpx_a-shrpx_http2_upstream.o: shrpx_http2_upstream.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-shrpx_http2_upstream.o -MD -MP -MF $(DEPDIR)/libnghttpx_a-shrpx_http2_upstream.Tpo -c -o libnghttpx_a-shrpx_http2_upstream.o `test -f 'shrpx_http2_upstream.cc' || echo '$(srcdir)/'`shrpx_http2_upstream.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-shrpx_http2_upstream.Tpo $(DEPDIR)/libnghttpx_a-shrpx_http2_upstream.Po
#	$(AM_V_CXX)source='shrpx_http2_upstream.cc' object='libnghttpx_a-shrpx_http2_upstream.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-shrpx_http2_upstream.o `test -f 'shrpx_http2_upstream.cc' || echo '$(srcdir)/'`shrpx_http2_upstream.cc

libnghttpx_a-shrpx_http2_upstream.obj: shrpx_http2_upstream.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-shrpx_http2_upstream.obj -MD -MP -MF $(DEPDIR)/libnghttpx_a-shrpx_http2_upstream.Tpo -c -o libnghttpx_a-shrpx_http2_upstream.obj `if test -f 'shrpx_http2_upstream.cc'; then $(CYGPATH_W) 'shrpx_http2_upstream.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx_http2_upstream.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-shrpx_http2_upstream.Tpo $(DEPDIR)/libnghttpx_a-shrpx_http2_upstream.Po
#	$(AM_V_CXX)source='shrpx_http2_upstream.cc' object='libnghttpx_a-shrpx_http2_upstream.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-shrpx_http2_upstream.obj `if test -f 'shrpx_http2_upstream.cc'; then $(CYGPATH_W) 'shrpx_http2_upstream.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx_http2_upstream.cc'; fi`

libnghttpx_a-shrpx_https_upstream.o: shrpx_https_upstream.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-shrpx_https_upstream.o -MD -MP -MF $(DEPDIR)/libnghttpx_a-shrpx_https_upstream.Tpo -c -o libnghttpx_a-shrpx_https_upstream.o `test -f 'shrpx_https_upstream.cc' || echo '$(srcdir)/'`shrpx_https_upstream.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-shrpx_https_upstream.Tpo $(DEPDIR)/libnghttpx_a-shrpx_https_upstream.Po
#	$(AM_V_CXX)source='shrpx_https_upstream.cc' object='libnghttpx_a-shrpx_https_upstream.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-shrpx_https_upstream.o `test -f 'shrpx_https_upstream.cc' || echo '$(srcdir)/'`shrpx_https_upstream.cc

libnghttpx_a-shrpx_https_upstream.obj: shrpx_https_upstream.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-shrpx_https_upstream.obj -MD -MP -MF $(DEPDIR)/libnghttpx_a-shrpx_https_upstream.Tpo -c -o libnghttpx_a-shrpx_https_upstream.obj `if test -f 'shrpx_https_upstream.cc'; then $(CYGPATH_W) 'shrpx_https_upstream.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx_https_upstream.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-shrpx_https_upstream.Tpo $(DEPDIR)/libnghttpx_a-shrpx_https_upstream.Po
#	$(AM_V_CXX)source='shrpx_https_upstream.cc' object='libnghttpx_a-shrpx_https_upstream.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-shrpx_https_upstream.obj `if test -f 'shrpx_https_upstream.cc'; then $(CYGPATH_W) 'shrpx_https_upstream.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx_https_upstream.cc'; fi`

libnghttpx_a-shrpx_downstream.o: shrpx_downstream.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-shrpx_downstream.o -MD -MP -MF $(DEPDIR)/libnghttpx_a-shrpx_downstream.Tpo -c -o libnghttpx_a-shrpx_downstream.o `test -f 'shrpx_downstream.cc' || echo '$(srcdir)/'`shrpx_downstream.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-shrpx_downstream.Tpo $(DEPDIR)/libnghttpx_a-shrpx_downstream.Po
#	$(AM_V_CXX)source='shrpx_downstream.cc' object='libnghttpx_a-shrpx_downstream.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-shrpx_downstream.o `test -f 'shrpx_downstream.cc' || echo '$(srcdir)/'`shrpx_downstream.cc

libnghttpx_a-shrpx_downstream.obj: shrpx_downstream.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-shrpx_downstream.obj -MD -MP -MF $(DEPDIR)/libnghttpx_a-shrpx_downstream.Tpo -c -o libnghttpx_a-shrpx_downstream.obj `if test -f 'shrpx_downstream.cc'; then $(CYGPATH_W) 'shrpx_downstream.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx_downstream.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-shrpx_downstream.Tpo $(DEPDIR)/libnghttpx_a-shrpx_downstream.Po
#	$(AM_V_CXX)source='shrpx_downstream.cc' object='libnghttpx_a-shrpx_downstream.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-shrpx_downstream.obj `if test -f 'shrpx_downstream.cc'; then $(CYGPATH_W) 'shrpx_downstream.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx_downstream.cc'; fi`

libnghttpx_a-shrpx_downstream_connection.o: shrpx_downstream_connection.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-shrpx_downstream_connection.o -MD -MP -MF $(DEPDIR)/libnghttpx_a-shrpx_downstream_connection.Tpo -c -o libnghttpx_a-shrpx_downstream_connection.o `test -f 'shrpx_downstream_connection.cc' || echo '$(srcdir)/'`shrpx_downstream_connection.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-shrpx_downstream_connection.Tpo $(DEPDIR)/libnghttpx_a-shrpx_downstream_connection.Po
#	$(AM_V_CXX)source='shrpx_downstream_connection.cc' object='libnghttpx_a-shrpx_downstream_connection.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-shrpx_downstream_connection.o `test -f 'shrpx_downstream_connection.cc' || echo '$(srcdir)/'`shrpx_downstream_connection.cc

libnghttpx_a-shrpx_downstream_connection.obj: shrpx_downstream_connection.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-shrpx_downstream_connection.obj -MD -MP -MF $(DEPDIR)/libnghttpx_a-shrpx_downstream_connection.Tpo -c -o libnghttpx_a-shrpx_downstream_connection.obj `if test -f 'shrpx_downstream_connection.cc'; then $(CYGPATH_W) 'shrpx_downstream_connection.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx_downstream_connection.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-shrpx_downstream_connection.Tpo $(DEPDIR)/libnghttpx_a-shrpx_downstream_connection.Po
#	$(AM_V_CXX)source='shrpx_downstream_connection.cc' object='libnghttpx_a-shrpx_downstream_connection.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-shrpx_downstream_connection.obj `if test -f 'shrpx_downstream_connection.cc'; then $(CYGPATH_W) 'shrpx_downstream_connection.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx_downstream_connection.cc'; fi`

libnghttpx_a-shrpx_http_downstream_connection.o: shrpx_http_downstream_connection.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-shrpx_http_downstream_connection.o -MD -MP -MF $(DEPDIR)/libnghttpx_a-shrpx_http_downstream_connection.Tpo -c -o libnghttpx_a-shrpx_http_downstream_connection.o `test -f 'shrpx_http_downstream_connection.cc' || echo '$(srcdir)/'`shrpx_http_downstream_connection.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-shrpx_http_downstream_connection.Tpo $(DEPDIR)/libnghttpx_a-shrpx_http_downstream_connection.Po
#	$(AM_V_CXX)source='shrpx_http_downstream_connection.cc' object='libnghttpx_a-shrpx_http_downstream_connection.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-shrpx_http_downstream_connection.o `test -f 'shrpx_http_downstream_connection.cc' || echo '$(srcdir)/'`shrpx_http_downstream_connection.cc

libnghttpx_a-shrpx_http_downstream_connection.obj: shrpx_http_downstream_connection.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-shrpx_http_downstream_connection.obj -MD -MP -MF $(DEPDIR)/libnghttpx_a-shrpx_http_downstream_connection.Tpo -c -o libnghttpx_a-shrpx_http_downstream_connection.obj `if test -f 'shrpx_http_downstream_connection.cc'; then $(CYGPATH_W) 'shrpx_http_downstream_connection.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx_http_downstream_connection.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-shrpx_http_downstream_connection.Tpo $(DEPDIR)/libnghttpx_a-shrpx_http_downstream_connection.Po
#	$(AM_V_CXX)source='shrpx_http_downstream_connection.cc' object='libnghttpx_a-shrpx_http_downstream_connection.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-shrpx_http_downstream_connection.obj `if test -f 'shrpx_http_downstream_connection.cc'; then $(CYGPATH_W) 'shrpx_http_downstream_connection.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx_http_downstream_connection.cc'; fi`

libnghttpx_a-shrpx_http2_downstream_connection.o: shrpx_http2_downstream_connection.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-shrpx_http2_downstream_connection.o -MD -MP -MF $(DEPDIR)/libnghttpx_a-shrpx_http2_downstream_connection.Tpo -c -o libnghttpx_a-shrpx_http2_downstream_connection.o `test -f 'shrpx_http2_downstream_connection.cc' || echo '$(srcdir)/'`shrpx_http2_downstream_connection.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-shrpx_http2_downstream_connection.Tpo $(DEPDIR)/libnghttpx_a-shrpx_http2_downstream_connection.Po
#	$(AM_V_CXX)source='shrpx_http2_downstream_connection.cc' object='libnghttpx_a-shrpx_http2_downstream_connection.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-shrpx_http2_downstream_connection.o `test -f 'shrpx_http2_downstream_connection.cc' || echo '$(srcdir)/'`shrpx_http2_downstream_connection.cc

libnghttpx_a-shrpx_http2_downstream_connection.obj: shrpx_http2_downstream_connection.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-shrpx_http2_downstream_connection.obj -MD -MP -MF $(DEPDIR)/libnghttpx_a-shrpx_http2_downstream_connection.Tpo -c -o libnghttpx_a-shrpx_http2_downstream_connection.obj `if test -f 'shrpx_http2_downstream_connection.cc'; then $(CYGPATH_W) 'shrpx_http2_downstream_connection.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx_http2_downstream_connection.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-shrpx_http2_downstream_connection.Tpo $(DEPDIR)/libnghttpx_a-shrpx_http2_downstream_connection.Po
#	$(AM_V_CXX)source='shrpx_http2_downstream_connection.cc' object='libnghttpx_a-shrpx_http2_downstream_connection.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-shrpx_http2_downstream_connection.obj `if test -f 'shrpx_http2_downstream_connection.cc'; then $(CYGPATH_W) 'shrpx_http2_downstream_connection.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx_http2_downstream_connection.cc'; fi`

libnghttpx_a-shrpx_http2_session.o: shrpx_http2_session.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-shrpx_http2_session.o -MD -MP -MF $(DEPDIR)/libnghttpx_a-shrpx_http2_session.Tpo -c -o libnghttpx_a-shrpx_http2_session.o `test -f 'shrpx_http2_session.cc' || echo '$(srcdir)/'`shrpx_http2_session.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-shrpx_http2_session.Tpo $(DEPDIR)/libnghttpx_a-shrpx_http2_session.Po
#	$(AM_V_CXX)source='shrpx_http2_session.cc' object='libnghttpx_a-shrpx_http2_session.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-shrpx_http2_session.o `test -f 'shrpx_http2_session.cc' || echo '$(srcdir)/'`shrpx_http2_session.cc

libnghttpx_a-shrpx_http2_session.obj: shrpx_http2_session.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-shrpx_http2_session.obj -MD -MP -MF $(DEPDIR)/libnghttpx_a-shrpx_http2_session.Tpo -c -o libnghttpx_a-shrpx_http2_session.obj `if test -f 'shrpx_http2_session.cc'; then $(CYGPATH_W) 'shrpx_http2_session.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx_http2_session.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-shrpx_http2_session.Tpo $(DEPDIR)/libnghttpx_a-shrpx_http2_session.Po
#	$(AM_V_CXX)source='shrpx_http2_session.cc' object='libnghttpx_a-shrpx_http2_session.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-shrpx_http2_session.obj `if test -f 'shrpx_http2_session.cc'; then $(CYGPATH_W) 'shrpx_http2_session.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx_http2_session.cc'; fi`

libnghttpx_a-shrpx_downstream_queue.o: shrpx_downstream_queue.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-shrpx_downstream_queue.o -MD -MP -MF $(DEPDIR)/libnghttpx_a-shrpx_downstream_queue.Tpo -c -o libnghttpx_a-shrpx_downstream_queue.o `test -f 'shrpx_downstream_queue.cc' || echo '$(srcdir)/'`shrpx_downstream_queue.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-shrpx_downstream_queue.Tpo $(DEPDIR)/libnghttpx_a-shrpx_downstream_queue.Po
#	$(AM_V_CXX)source='shrpx_downstream_queue.cc' object='libnghttpx_a-shrpx_downstream_queue.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-shrpx_downstream_queue.o `test -f 'shrpx_downstream_queue.cc' || echo '$(srcdir)/'`shrpx_downstream_queue.cc

libnghttpx_a-shrpx_downstream_queue.obj: shrpx_downstream_queue.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-shrpx_downstream_queue.obj -MD -MP -MF $(DEPDIR)/libnghttpx_a-shrpx_downstream_queue.Tpo -c -o libnghttpx_a-shrpx_downstream_queue.obj `if test -f 'shrpx_downstream_queue.cc'; then $(CYGPATH_W) 'shrpx_downstream_queue.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx_downstream_queue.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-shrpx_downstream_queue.Tpo $(DEPDIR)/libnghttpx_a-shrpx_downstream_queue.Po
#	$(AM_V_CXX)source='shrpx_downstream_queue.cc' object='libnghttpx_a-shrpx_downstream_queue.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-shrpx_downstream_queue.obj `if test -f 'shrpx_downstream_queue.cc'; then $(CYGPATH_W) 'shrpx_downstream_queue.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx_downstream_queue.cc'; fi`

libnghttpx_a-shrpx_log.o: shrpx_log.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-shrpx_log.o -MD -MP -MF $(DEPDIR)/libnghttpx_a-shrpx_log.Tpo -c -o libnghttpx_a-shrpx_log.o `test -f 'shrpx_log.cc' || echo '$(srcdir)/'`shrpx_log.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-shrpx_log.Tpo $(DEPDIR)/libnghttpx_a-shrpx_log.Po
#	$(AM_V_CXX)source='shrpx_log.cc' object='libnghttpx_a-shrpx_log.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-shrpx_log.o `test -f 'shrpx_log.cc' || echo '$(srcdir)/'`shrpx_log.cc

libnghttpx_a-shrpx_log.obj: shrpx_log.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-shrpx_log.obj -MD -MP -MF $(DEPDIR)/libnghttpx_a-shrpx_log.Tpo -c -o libnghttpx_a-shrpx_log.obj `if test -f 'shrpx_log.cc'; then $(CYGPATH_W) 'shrpx_log.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx_log.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-shrpx_log.Tpo $(DEPDIR)/libnghttpx_a-shrpx_log.Po
#	$(AM_V_CXX)source='shrpx_log.cc' object='libnghttpx_a-shrpx_log.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-shrpx_log.obj `if test -f 'shrpx_log.cc'; then $(CYGPATH_W) 'shrpx_log.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx_log.cc'; fi`

libnghttpx_a-shrpx_http.o: shrpx_http.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-shrpx_http.o -MD -MP -MF $(DEPDIR)/libnghttpx_a-shrpx_http.Tpo -c -o libnghttpx_a-shrpx_http.o `test -f 'shrpx_http.cc' || echo '$(srcdir)/'`shrpx_http.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-shrpx_http.Tpo $(DEPDIR)/libnghttpx_a-shrpx_http.Po
#	$(AM_V_CXX)source='shrpx_http.cc' object='libnghttpx_a-shrpx_http.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-shrpx_http.o `test -f 'shrpx_http.cc' || echo '$(srcdir)/'`shrpx_http.cc

libnghttpx_a-shrpx_http.obj: shrpx_http.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-shrpx_http.obj -MD -MP -MF $(DEPDIR)/libnghttpx_a-shrpx_http.Tpo -c -o libnghttpx_a-shrpx_http.obj `if test -f 'shrpx_http.cc'; then $(CYGPATH_W) 'shrpx_http.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx_http.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-shrpx_http.Tpo $(DEPDIR)/libnghttpx_a-shrpx_http.Po
#	$(AM_V_CXX)source='shrpx_http.cc' object='libnghttpx_a-shrpx_http.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-shrpx_http.obj `if test -f 'shrpx_http.cc'; then $(CYGPATH_W) 'shrpx_http.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx_http.cc'; fi`

libnghttpx_a-shrpx_io_control.o: shrpx_io_control.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-shrpx_io_control.o -MD -MP -MF $(DEPDIR)/libnghttpx_a-shrpx_io_control.Tpo -c -o libnghttpx_a-shrpx_io_control.o `test -f 'shrpx_io_control.cc' || echo '$(srcdir)/'`shrpx_io_control.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-shrpx_io_control.Tpo $(DEPDIR)/libnghttpx_a-shrpx_io_control.Po
#	$(AM_V_CXX)source='shrpx_io_control.cc' object='libnghttpx_a-shrpx_io_control.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-shrpx_io_control.o `test -f 'shrpx_io_control.cc' || echo '$(srcdir)/'`shrpx_io_control.cc

libnghttpx_a-shrpx_io_control.obj: shrpx_io_control.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-shrpx_io_control.obj -MD -MP -MF $(DEPDIR)/libnghttpx_a-shrpx_io_control.Tpo -c -o libnghttpx_a-shrpx_io_control.obj `if test -f 'shrpx_io_control.cc'; then $(CYGPATH_W) 'shrpx_io_control.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx_io_control.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-shrpx_io_control.Tpo $(DEPDIR)/libnghttpx_a-shrpx_io_control.Po
#	$(AM_V_CXX)source='shrpx_io_control.cc' object='libnghttpx_a-shrpx_io_control.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-shrpx_io_control.obj `if test -f 'shrpx_io_control.cc'; then $(CYGPATH_W) 'shrpx_io_control.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx_io_control.cc'; fi`

libnghttpx_a-shrpx_ssl.o: shrpx_ssl.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-shrpx_ssl.o -MD -MP -MF $(DEPDIR)/libnghttpx_a-shrpx_ssl.Tpo -c -o libnghttpx_a-shrpx_ssl.o `test -f 'shrpx_ssl.cc' || echo '$(srcdir)/'`shrpx_ssl.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-shrpx_ssl.Tpo $(DEPDIR)/libnghttpx_a-shrpx_ssl.Po
#	$(AM_V_CXX)source='shrpx_ssl.cc' object='libnghttpx_a-shrpx_ssl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-shrpx_ssl.o `test -f 'shrpx_ssl.cc' || echo '$(srcdir)/'`shrpx_ssl.cc

libnghttpx_a-shrpx_ssl.obj: shrpx_ssl.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-shrpx_ssl.obj -MD -MP -MF $(DEPDIR)/libnghttpx_a-shrpx_ssl.Tpo -c -o libnghttpx_a-shrpx_ssl.obj `if test -f 'shrpx_ssl.cc'; then $(CYGPATH_W) 'shrpx_ssl.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx_ssl.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-shrpx_ssl.Tpo $(DEPDIR)/libnghttpx_a-shrpx_ssl.Po
#	$(AM_V_CXX)source='shrpx_ssl.cc' object='libnghttpx_a-shrpx_ssl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-shrpx_ssl.obj `if test -f 'shrpx_ssl.cc'; then $(CYGPATH_W) 'shrpx_ssl.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx_ssl.cc'; fi`

libnghttpx_a-shrpx_worker.o: shrpx_worker.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-shrpx_worker.o -MD -MP -MF $(DEPDIR)/libnghttpx_a-shrpx_worker.Tpo -c -o libnghttpx_a-shrpx_worker.o `test -f 'shrpx_worker.cc' || echo '$(srcdir)/'`shrpx_worker.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-shrpx_worker.Tpo $(DEPDIR)/libnghttpx_a-shrpx_worker.Po
#	$(AM_V_CXX)source='shrpx_worker.cc' object='libnghttpx_a-shrpx_worker.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-shrpx_worker.o `test -f 'shrpx_worker.cc' || echo '$(srcdir)/'`shrpx_worker.cc

libnghttpx_a-shrpx_worker.obj: shrpx_worker.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-shrpx_worker.obj -MD -MP -MF $(DEPDIR)/libnghttpx_a-shrpx_worker.Tpo -c -o libnghttpx_a-shrpx_worker.obj `if test -f 'shrpx_worker.cc'; then $(CYGPATH_W) 'shrpx_worker.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx_worker.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-shrpx_worker.Tpo $(DEPDIR)/libnghttpx_a-shrpx_worker.Po
#	$(AM_V_CXX)source='shrpx_worker.cc' object='libnghttpx_a-shrpx_worker.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-shrpx_worker.obj `if test -f 'shrpx_worker.cc'; then $(CYGPATH_W) 'shrpx_worker.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx_worker.cc'; fi`

libnghttpx_a-shrpx_log_config.o: shrpx_log_config.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-shrpx_log_config.o -MD -MP -MF $(DEPDIR)/libnghttpx_a-shrpx_log_config.Tpo -c -o libnghttpx_a-shrpx_log_config.o `test -f 'shrpx_log_config.cc' || echo '$(srcdir)/'`shrpx_log_config.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-shrpx_log_config.Tpo $(DEPDIR)/libnghttpx_a-shrpx_log_config.Po
#	$(AM_V_CXX)source='shrpx_log_config.cc' object='libnghttpx_a-shrpx_log_config.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-shrpx_log_config.o `test -f 'shrpx_log_config.cc' || echo '$(srcdir)/'`shrpx_log_config.cc

libnghttpx_a-shrpx_log_config.obj: shrpx_log_config.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-shrpx_log_config.obj -MD -MP -MF $(DEPDIR)/libnghttpx_a-shrpx_log_config.Tpo -c -o libnghttpx_a-shrpx_log_config.obj `if test -f 'shrpx_log_config.cc'; then $(CYGPATH_W) 'shrpx_log_config.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx_log_config.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-shrpx_log_config.Tpo $(DEPDIR)/libnghttpx_a-shrpx_log_config.Po
#	$(AM_V_CXX)source='shrpx_log_config.cc' object='libnghttpx_a-shrpx_log_config.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-shrpx_log_config.obj `if test -f 'shrpx_log_config.cc'; then $(CYGPATH_W) 'shrpx_log_config.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx_log_config.cc'; fi`

libnghttpx_a-shrpx_connect_blocker.o: shrpx_connect_blocker.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-shrpx_connect_blocker.o -MD -MP -MF $(DEPDIR)/libnghttpx_a-shrpx_connect_blocker.Tpo -c -o libnghttpx_a-shrpx_connect_blocker.o `test -f 'shrpx_connect_blocker.cc' || echo '$(srcdir)/'`shrpx_connect_blocker.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-shrpx_connect_blocker.Tpo $(DEPDIR)/libnghttpx_a-shrpx_connect_blocker.Po
#	$(AM_V_CXX)source='shrpx_connect_blocker.cc' object='libnghttpx_a-shrpx_connect_blocker.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-shrpx_connect_blocker.o `test -f 'shrpx_connect_blocker.cc' || echo '$(srcdir)/'`shrpx_connect_blocker.cc

libnghttpx_a-shrpx_connect_blocker.obj: shrpx_connect_blocker.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-shrpx_connect_blocker.obj -MD -MP -MF $(DEPDIR)/libnghttpx_a-shrpx_connect_blocker.Tpo -c -o libnghttpx_a-shrpx_connect_blocker.obj `if test -f 'shrpx_connect_blocker.cc'; then $(CYGPATH_W) 'shrpx_connect_blocker.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx_connect_blocker.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-shrpx_connect_blocker.Tpo $(DEPDIR)/libnghttpx_a-shrpx_connect_blocker.Po
#	$(AM_V_CXX)source='shrpx_connect_blocker.cc' object='libnghttpx_a-shrpx_connect_blocker.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-shrpx_connect_blocker.obj `if test -f 'shrpx_connect_blocker.cc'; then $(CYGPATH_W) 'shrpx_connect_blocker.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx_connect_blocker.cc'; fi`

libnghttpx_a-shrpx_downstream_connection_pool.o: shrpx_downstream_connection_pool.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-shrpx_downstream_connection_pool.o -MD -MP -MF $(DEPDIR)/libnghttpx_a-shrpx_downstream_connection_pool.Tpo -c -o libnghttpx_a-shrpx_downstream_connection_pool.o `test -f 'shrpx_downstream_connection_pool.cc' || echo '$(srcdir)/'`shrpx_downstream_connection_pool.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-shrpx_downstream_connection_pool.Tpo $(DEPDIR)/libnghttpx_a-shrpx_downstream_connection_pool.Po
#	$(AM_V_CXX)source='shrpx_downstream_connection_pool.cc' object='libnghttpx_a-shrpx_downstream_connection_pool.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-shrpx_downstream_connection_pool.o `test -f 'shrpx_downstream_connection_pool.cc' || echo '$(srcdir)/'`shrpx_downstream_connection_pool.cc

libnghttpx_a-shrpx_downstream_connection_pool.obj: shrpx_downstream_connection_pool.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-shrpx_downstream_connection_pool.obj -MD -MP -MF $(DEPDIR)/libnghttpx_a-shrpx_downstream_connection_pool.Tpo -c -o libnghttpx_a-shrpx_downstream_connection_pool.obj `if test -f 'shrpx_downstream_connection_pool.cc'; then $(CYGPATH_W) 'shrpx_downstream_connection_pool.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx_downstream_connection_pool.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-shrpx_downstream_connection_pool.Tpo $(DEPDIR)/libnghttpx_a-shrpx_downstream_connection_pool.Po
#	$(AM_V_CXX)source='shrpx_downstream_connection_pool.cc' object='libnghttpx_a-shrpx_downstream_connection_pool.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-shrpx_downstream_connection_pool.obj `if test -f 'shrpx_downstream_connection_pool.cc'; then $(CYGPATH_W) 'shrpx_downstream_connection_pool.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx_downstream_connection_pool.cc'; fi`

libnghttpx_a-shrpx_rate_limit.o: shrpx_rate_limit.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-shrpx_rate_limit.o -MD -MP -MF $(DEPDIR)/libnghttpx_a-shrpx_rate_limit.Tpo -c -o libnghttpx_a-shrpx_rate_limit.o `test -f 'shrpx_rate_limit.cc' || echo '$(srcdir)/'`shrpx_rate_limit.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-shrpx_rate_limit.Tpo $(DEPDIR)/libnghttpx_a-shrpx_rate_limit.Po
#	$(AM_V_CXX)source='shrpx_rate_limit.cc' object='libnghttpx_a-shrpx_rate_limit.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-shrpx_rate_limit.o `test -f 'shrpx_rate_limit.cc' || echo '$(srcdir)/'`shrpx_rate_limit.cc

libnghttpx_a-shrpx_rate_limit.obj: shrpx_rate_limit.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-shrpx_rate_limit.obj -MD -MP -MF $(DEPDIR)/libnghttpx_a-shrpx_rate_limit.Tpo -c -o libnghttpx_a-shrpx_rate_limit.obj `if test -f 'shrpx_rate_limit.cc'; then $(CYGPATH_W) 'shrpx_rate_limit.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx_rate_limit.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-shrpx_rate_limit.Tpo $(DEPDIR)/libnghttpx_a-shrpx_rate_limit.Po
#	$(AM_V_CXX)source='shrpx_rate_limit.cc' object='libnghttpx_a-shrpx_rate_limit.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-shrpx_rate_limit.obj `if test -f 'shrpx_rate_limit.cc'; then $(CYGPATH_W) 'shrpx_rate_limit.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx_rate_limit.cc'; fi`

libnghttpx_a-shrpx_connection.o: shrpx_connection.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-shrpx_connection.o -MD -MP -MF $(DEPDIR)/libnghttpx_a-shrpx_connection.Tpo -c -o libnghttpx_a-shrpx_connection.o `test -f 'shrpx_connection.cc' || echo '$(srcdir)/'`shrpx_connection.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-shrpx_connection.Tpo $(DEPDIR)/libnghttpx_a-shrpx_connection.Po
#	$(AM_V_CXX)source='shrpx_connection.cc' object='libnghttpx_a-shrpx_connection.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-shrpx_connection.o `test -f 'shrpx_connection.cc' || echo '$(srcdir)/'`shrpx_connection.cc

libnghttpx_a-shrpx_connection.obj: shrpx_connection.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-shrpx_connection.obj -MD -MP -MF $(DEPDIR)/libnghttpx_a-shrpx_connection.Tpo -c -o libnghttpx_a-shrpx_connection.obj `if test -f 'shrpx_connection.cc'; then $(CYGPATH_W) 'shrpx_connection.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx_connection.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-shrpx_connection.Tpo $(DEPDIR)/libnghttpx_a-shrpx_connection.Po
#	$(AM_V_CXX)source='shrpx_connection.cc' object='libnghttpx_a-shrpx_connection.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-shrpx_connection.obj `if test -f 'shrpx_connection.cc'; then $(CYGPATH_W) 'shrpx_connection.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx_connection.cc'; fi`

libnghttpx_a-shrpx_memcached_dispatcher.o: shrpx_memcached_dispatcher.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-shrpx_memcached_dispatcher.o -MD -MP -MF $(DEPDIR)/libnghttpx_a-shrpx_memcached_dispatcher.Tpo -c -o libnghttpx_a-shrpx_memcached_dispatcher.o `test -f 'shrpx_memcached_dispatcher.cc' || echo '$(srcdir)/'`shrpx_memcached_dispatcher.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-shrpx_memcached_dispatcher.Tpo $(DEPDIR)/libnghttpx_a-shrpx_memcached_dispatcher.Po
#	$(AM_V_CXX)source='shrpx_memcached_dispatcher.cc' object='libnghttpx_a-shrpx_memcached_dispatcher.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-shrpx_memcached_dispatcher.o `test -f 'shrpx_memcached_dispatcher.cc' || echo '$(srcdir)/'`shrpx_memcached_dispatcher.cc

libnghttpx_a-shrpx_memcached_dispatcher.obj: shrpx_memcached_dispatcher.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-shrpx_memcached_dispatcher.obj -MD -MP -MF $(DEPDIR)/libnghttpx_a-shrpx_memcached_dispatcher.Tpo -c -o libnghttpx_a-shrpx_memcached_dispatcher.obj `if test -f 'shrpx_memcached_dispatcher.cc'; then $(CYGPATH_W) 'shrpx_memcached_dispatcher.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx_memcached_dispatcher.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-shrpx_memcached_dispatcher.Tpo $(DEPDIR)/libnghttpx_a-shrpx_memcached_dispatcher.Po
#	$(AM_V_CXX)source='shrpx_memcached_dispatcher.cc' object='libnghttpx_a-shrpx_memcached_dispatcher.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-shrpx_memcached_dispatcher.obj `if test -f 'shrpx_memcached_dispatcher.cc'; then $(CYGPATH_W) 'shrpx_memcached_dispatcher.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx_memcached_dispatcher.cc'; fi`

libnghttpx_a-shrpx_memcached_connection.o: shrpx_memcached_connection.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-shrpx_memcached_connection.o -MD -MP -MF $(DEPDIR)/libnghttpx_a-shrpx_memcached_connection.Tpo -c -o libnghttpx_a-shrpx_memcached_connection.o `test -f 'shrpx_memcached_connection.cc' || echo '$(srcdir)/'`shrpx_memcached_connection.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-shrpx_memcached_connection.Tpo $(DEPDIR)/libnghttpx_a-shrpx_memcached_connection.Po
#	$(AM_V_CXX)source='shrpx_memcached_connection.cc' object='libnghttpx_a-shrpx_memcached_connection.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-shrpx_memcached_connection.o `test -f 'shrpx_memcached_connection.cc' || echo '$(srcdir)/'`shrpx_memcached_connection.cc

libnghttpx_a-shrpx_memcached_connection.obj: shrpx_memcached_connection.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-shrpx_memcached_connection.obj -MD -MP -MF $(DEPDIR)/libnghttpx_a-shrpx_memcached_connection.Tpo -c -o libnghttpx_a-shrpx_memcached_connection.obj `if test -f 'shrpx_memcached_connection.cc'; then $(CYGPATH_W) 'shrpx_memcached_connection.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx_memcached_connection.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-shrpx_memcached_connection.Tpo $(DEPDIR)/libnghttpx_a-shrpx_memcached_connection.Po
#	$(AM_V_CXX)source='shrpx_memcached_connection.cc' object='libnghttpx_a-shrpx_memcached_connection.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-shrpx_memcached_connection.obj `if test -f 'shrpx_memcached_connection.cc'; then $(CYGPATH_W) 'shrpx_memcached_connection.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx_memcached_connection.cc'; fi`

libnghttpx_a-shrpx_worker_process.o: shrpx_worker_process.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-shrpx_worker_process.o -MD -MP -MF $(DEPDIR)/libnghttpx_a-shrpx_worker_process.Tpo -c -o libnghttpx_a-shrpx_worker_process.o `test -f 'shrpx_worker_process.cc' || echo '$(srcdir)/'`shrpx_worker_process.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-shrpx_worker_process.Tpo $(DEPDIR)/libnghttpx_a-shrpx_worker_process.Po
#	$(AM_V_CXX)source='shrpx_worker_process.cc' object='libnghttpx_a-shrpx_worker_process.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-shrpx_worker_process.o `test -f 'shrpx_worker_process.cc' || echo '$(srcdir)/'`shrpx_worker_process.cc

libnghttpx_a-shrpx_worker_process.obj: shrpx_worker_process.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-shrpx_worker_process.obj -MD -MP -MF $(DEPDIR)/libnghttpx_a-shrpx_worker_process.Tpo -c -o libnghttpx_a-shrpx_worker_process.obj `if test -f 'shrpx_worker_process.cc'; then $(CYGPATH_W) 'shrpx_worker_process.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx_worker_process.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-shrpx_worker_process.Tpo $(DEPDIR)/libnghttpx_a-shrpx_worker_process.Po
#	$(AM_V_CXX)source='shrpx_worker_process.cc' object='libnghttpx_a-shrpx_worker_process.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-shrpx_worker_process.obj `if test -f 'shrpx_worker_process.cc'; then $(CYGPATH_W) 'shrpx_worker_process.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx_worker_process.cc'; fi`

libnghttpx_a-shrpx_signal.o: shrpx_signal.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-shrpx_signal.o -MD -MP -MF $(DEPDIR)/libnghttpx_a-shrpx_signal.Tpo -c -o libnghttpx_a-shrpx_signal.o `test -f 'shrpx_signal.cc' || echo '$(srcdir)/'`shrpx_signal.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-shrpx_signal.Tpo $(DEPDIR)/libnghttpx_a-shrpx_signal.Po
#	$(AM_V_CXX)source='shrpx_signal.cc' object='libnghttpx_a-shrpx_signal.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-shrpx_signal.o `test -f 'shrpx_signal.cc' || echo '$(srcdir)/'`shrpx_signal.cc

libnghttpx_a-shrpx_signal.obj: shrpx_signal.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-shrpx_signal.obj -MD -MP -MF $(DEPDIR)/libnghttpx_a-shrpx_signal.Tpo -c -o libnghttpx_a-shrpx_signal.obj `if test -f 'shrpx_signal.cc'; then $(CYGPATH_W) 'shrpx_signal.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx_signal.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-shrpx_signal.Tpo $(DEPDIR)/libnghttpx_a-shrpx_signal.Po
#	$(AM_V_CXX)source='shrpx_signal.cc' object='libnghttpx_a-shrpx_signal.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-shrpx_signal.obj `if test -f 'shrpx_signal.cc'; then $(CYGPATH_W) 'shrpx_signal.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx_signal.cc'; fi`

libnghttpx_a-shrpx_router.o: shrpx_router.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-shrpx_router.o -MD -MP -MF $(DEPDIR)/libnghttpx_a-shrpx_router.Tpo -c -o libnghttpx_a-shrpx_router.o `test -f 'shrpx_router.cc' || echo '$(srcdir)/'`shrpx_router.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-shrpx_router.Tpo $(DEPDIR)/libnghttpx_a-shrpx_router.Po
#	$(AM_V_CXX)source='shrpx_router.cc' object='libnghttpx_a-shrpx_router.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-shrpx_router.o `test -f 'shrpx_router.cc' || echo '$(srcdir)/'`shrpx_router.cc

libnghttpx_a-shrpx_router.obj: shrpx_router.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-shrpx_router.obj -MD -MP -MF $(DEPDIR)/libnghttpx_a-shrpx_router.Tpo -c -o libnghttpx_a-shrpx_router.obj `if test -f 'shrpx_router.cc'; then $(CYGPATH_W) 'shrpx_router.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx_router.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-shrpx_router.Tpo $(DEPDIR)/libnghttpx_a-shrpx_router.Po
#	$(AM_V_CXX)source='shrpx_router.cc' object='libnghttpx_a-shrpx_router.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-shrpx_router.obj `if test -f 'shrpx_router.cc'; then $(CYGPATH_W) 'shrpx_router.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx_router.cc'; fi`

libnghttpx_a-shrpx_spdy_upstream.o: shrpx_spdy_upstream.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-shrpx_spdy_upstream.o -MD -MP -MF $(DEPDIR)/libnghttpx_a-shrpx_spdy_upstream.Tpo -c -o libnghttpx_a-shrpx_spdy_upstream.o `test -f 'shrpx_spdy_upstream.cc' || echo '$(srcdir)/'`shrpx_spdy_upstream.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-shrpx_spdy_upstream.Tpo $(DEPDIR)/libnghttpx_a-shrpx_spdy_upstream.Po
#	$(AM_V_CXX)source='shrpx_spdy_upstream.cc' object='libnghttpx_a-shrpx_spdy_upstream.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-shrpx_spdy_upstream.o `test -f 'shrpx_spdy_upstream.cc' || echo '$(srcdir)/'`shrpx_spdy_upstream.cc

libnghttpx_a-shrpx_spdy_upstream.obj: shrpx_spdy_upstream.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-shrpx_spdy_upstream.obj -MD -MP -MF $(DEPDIR)/libnghttpx_a-shrpx_spdy_upstream.Tpo -c -o libnghttpx_a-shrpx_spdy_upstream.obj `if test -f 'shrpx_spdy_upstream.cc'; then $(CYGPATH_W) 'shrpx_spdy_upstream.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx_spdy_upstream.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-shrpx_spdy_upstream.Tpo $(DEPDIR)/libnghttpx_a-shrpx_spdy_upstream.Po
#	$(AM_V_CXX)source='shrpx_spdy_upstream.cc' object='libnghttpx_a-shrpx_spdy_upstream.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-shrpx_spdy_upstream.obj `if test -f 'shrpx_spdy_upstream.cc'; then $(CYGPATH_W) 'shrpx_spdy_upstream.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx_spdy_upstream.cc'; fi`

libnghttpx_a-shrpx_mruby.o: shrpx_mruby.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-shrpx_mruby.o -MD -MP -MF $(DEPDIR)/libnghttpx_a-shrpx_mruby.Tpo -c -o libnghttpx_a-shrpx_mruby.o `test -f 'shrpx_mruby.cc' || echo '$(srcdir)/'`shrpx_mruby.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-shrpx_mruby.Tpo $(DEPDIR)/libnghttpx_a-shrpx_mruby.Po
#	$(AM_V_CXX)source='shrpx_mruby.cc' object='libnghttpx_a-shrpx_mruby.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-shrpx_mruby.o `test -f 'shrpx_mruby.cc' || echo '$(srcdir)/'`shrpx_mruby.cc

libnghttpx_a-shrpx_mruby.obj: shrpx_mruby.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-shrpx_mruby.obj -MD -MP -MF $(DEPDIR)/libnghttpx_a-shrpx_mruby.Tpo -c -o libnghttpx_a-shrpx_mruby.obj `if test -f 'shrpx_mruby.cc'; then $(CYGPATH_W) 'shrpx_mruby.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx_mruby.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-shrpx_mruby.Tpo $(DEPDIR)/libnghttpx_a-shrpx_mruby.Po
#	$(AM_V_CXX)source='shrpx_mruby.cc' object='libnghttpx_a-shrpx_mruby.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-shrpx_mruby.obj `if test -f 'shrpx_mruby.cc'; then $(CYGPATH_W) 'shrpx_mruby.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx_mruby.cc'; fi`

libnghttpx_a-shrpx_mruby_module.o: shrpx_mruby_module.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-shrpx_mruby_module.o -MD -MP -MF $(DEPDIR)/libnghttpx_a-shrpx_mruby_module.Tpo -c -o libnghttpx_a-shrpx_mruby_module.o `test -f 'shrpx_mruby_module.cc' || echo '$(srcdir)/'`shrpx_mruby_module.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-shrpx_mruby_module.Tpo $(DEPDIR)/libnghttpx_a-shrpx_mruby_module.Po
#	$(AM_V_CXX)source='shrpx_mruby_module.cc' object='libnghttpx_a-shrpx_mruby_module.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-shrpx_mruby_module.o `test -f 'shrpx_mruby_module.cc' || echo '$(srcdir)/'`shrpx_mruby_module.cc

libnghttpx_a-shrpx_mruby_module.obj: shrpx_mruby_module.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-shrpx_mruby_module.obj -MD -MP -MF $(DEPDIR)/libnghttpx_a-shrpx_mruby_module.Tpo -c -o libnghttpx_a-shrpx_mruby_module.obj `if test -f 'shrpx_mruby_module.cc'; then $(CYGPATH_W) 'shrpx_mruby_module.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx_mruby_module.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-shrpx_mruby_module.Tpo $(DEPDIR)/libnghttpx_a-shrpx_mruby_module.Po
#	$(AM_V_CXX)source='shrpx_mruby_module.cc' object='libnghttpx_a-shrpx_mruby_module.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-shrpx_mruby_module.obj `if test -f 'shrpx_mruby_module.cc'; then $(CYGPATH_W) 'shrpx_mruby_module.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx_mruby_module.cc'; fi`

libnghttpx_a-shrpx_mruby_module_env.o: shrpx_mruby_module_env.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-shrpx_mruby_module_env.o -MD -MP -MF $(DEPDIR)/libnghttpx_a-shrpx_mruby_module_env.Tpo -c -o libnghttpx_a-shrpx_mruby_module_env.o `test -f 'shrpx_mruby_module_env.cc' || echo '$(srcdir)/'`shrpx_mruby_module_env.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-shrpx_mruby_module_env.Tpo $(DEPDIR)/libnghttpx_a-shrpx_mruby_module_env.Po
#	$(AM_V_CXX)source='shrpx_mruby_module_env.cc' object='libnghttpx_a-shrpx_mruby_module_env.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-shrpx_mruby_module_env.o `test -f 'shrpx_mruby_module_env.cc' || echo '$(srcdir)/'`shrpx_mruby_module_env.cc

libnghttpx_a-shrpx_mruby_module_env.obj: shrpx_mruby_module_env.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-shrpx_mruby_module_env.obj -MD -MP -MF $(DEPDIR)/libnghttpx_a-shrpx_mruby_module_env.Tpo -c -o libnghttpx_a-shrpx_mruby_module_env.obj `if test -f 'shrpx_mruby_module_env.cc'; then $(CYGPATH_W) 'shrpx_mruby_module_env.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx_mruby_module_env.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-shrpx_mruby_module_env.Tpo $(DEPDIR)/libnghttpx_a-shrpx_mruby_module_env.Po
#	$(AM_V_CXX)source='shrpx_mruby_module_env.cc' object='libnghttpx_a-shrpx_mruby_module_env.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-shrpx_mruby_module_env.obj `if test -f 'shrpx_mruby_module_env.cc'; then $(CYGPATH_W) 'shrpx_mruby_module_env.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx_mruby_module_env.cc'; fi`

libnghttpx_a-shrpx_mruby_module_request.o: shrpx_mruby_module_request.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-shrpx_mruby_module_request.o -MD -MP -MF $(DEPDIR)/libnghttpx_a-shrpx_mruby_module_request.Tpo -c -o libnghttpx_a-shrpx_mruby_module_request.o `test -f 'shrpx_mruby_module_request.cc' || echo '$(srcdir)/'`shrpx_mruby_module_request.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-shrpx_mruby_module_request.Tpo $(DEPDIR)/libnghttpx_a-shrpx_mruby_module_request.Po
#	$(AM_V_CXX)source='shrpx_mruby_module_request.cc' object='libnghttpx_a-shrpx_mruby_module_request.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-shrpx_mruby_module_request.o `test -f 'shrpx_mruby_module_request.cc' || echo '$(srcdir)/'`shrpx_mruby_module_request.cc

libnghttpx_a-shrpx_mruby_module_request.obj: shrpx_mruby_module_request.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-shrpx_mruby_module_request.obj -MD -MP -MF $(DEPDIR)/libnghttpx_a-shrpx_mruby_module_request.Tpo -c -o libnghttpx_a-shrpx_mruby_module_request.obj `if test -f 'shrpx_mruby_module_request.cc'; then $(CYGPATH_W) 'shrpx_mruby_module_request.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx_mruby_module_request.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-shrpx_mruby_module_request.Tpo $(DEPDIR)/libnghttpx_a-shrpx_mruby_module_request.Po
#	$(AM_V_CXX)source='shrpx_mruby_module_request.cc' object='libnghttpx_a-shrpx_mruby_module_request.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-shrpx_mruby_module_request.obj `if test -f 'shrpx_mruby_module_request.cc'; then $(CYGPATH_W) 'shrpx_mruby_module_request.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx_mruby_module_request.cc'; fi`

libnghttpx_a-shrpx_mruby_module_response.o: shrpx_mruby_module_response.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-shrpx_mruby_module_response.o -MD -MP -MF $(DEPDIR)/libnghttpx_a-shrpx_mruby_module_response.Tpo -c -o libnghttpx_a-shrpx_mruby_module_response.o `test -f 'shrpx_mruby_module_response.cc' || echo '$(srcdir)/'`shrpx_mruby_module_response.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-shrpx_mruby_module_response.Tpo $(DEPDIR)/libnghttpx_a-shrpx_mruby_module_response.Po
#	$(AM_V_CXX)source='shrpx_mruby_module_response.cc' object='libnghttpx_a-shrpx_mruby_module_response.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-shrpx_mruby_module_response.o `test -f 'shrpx_mruby_module_response.cc' || echo '$(srcdir)/'`shrpx_mruby_module_response.cc

libnghttpx_a-shrpx_mruby_module_response.obj: shrpx_mruby_module_response.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttpx_a-shrpx_mruby_module_response.obj -MD -MP -MF $(DEPDIR)/libnghttpx_a-shrpx_mruby_module_response.Tpo -c -o libnghttpx_a-shrpx_mruby_module_response.obj `if test -f 'shrpx_mruby_module_response.cc'; then $(CYGPATH_W) 'shrpx_mruby_module_response.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx_mruby_module_response.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttpx_a-shrpx_mruby_module_response.Tpo $(DEPDIR)/libnghttpx_a-shrpx_mruby_module_response.Po
#	$(AM_V_CXX)source='shrpx_mruby_module_response.cc' object='libnghttpx_a-shrpx_mruby_module_response.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttpx_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttpx_a-shrpx_mruby_module_response.obj `if test -f 'shrpx_mruby_module_response.cc'; then $(CYGPATH_W) 'shrpx_mruby_module_response.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx_mruby_module_response.cc'; fi`

libnghttp2_asio_la-util.lo: util.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttp2_asio_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttp2_asio_la-util.lo -MD -MP -MF $(DEPDIR)/libnghttp2_asio_la-util.Tpo -c -o libnghttp2_asio_la-util.lo `test -f 'util.cc' || echo '$(srcdir)/'`util.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttp2_asio_la-util.Tpo $(DEPDIR)/libnghttp2_asio_la-util.Plo
#	$(AM_V_CXX)source='util.cc' object='libnghttp2_asio_la-util.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttp2_asio_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttp2_asio_la-util.lo `test -f 'util.cc' || echo '$(srcdir)/'`util.cc

libnghttp2_asio_la-http2.lo: http2.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttp2_asio_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttp2_asio_la-http2.lo -MD -MP -MF $(DEPDIR)/libnghttp2_asio_la-http2.Tpo -c -o libnghttp2_asio_la-http2.lo `test -f 'http2.cc' || echo '$(srcdir)/'`http2.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttp2_asio_la-http2.Tpo $(DEPDIR)/libnghttp2_asio_la-http2.Plo
#	$(AM_V_CXX)source='http2.cc' object='libnghttp2_asio_la-http2.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttp2_asio_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttp2_asio_la-http2.lo `test -f 'http2.cc' || echo '$(srcdir)/'`http2.cc

libnghttp2_asio_la-ssl.lo: ssl.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttp2_asio_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttp2_asio_la-ssl.lo -MD -MP -MF $(DEPDIR)/libnghttp2_asio_la-ssl.Tpo -c -o libnghttp2_asio_la-ssl.lo `test -f 'ssl.cc' || echo '$(srcdir)/'`ssl.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttp2_asio_la-ssl.Tpo $(DEPDIR)/libnghttp2_asio_la-ssl.Plo
#	$(AM_V_CXX)source='ssl.cc' object='libnghttp2_asio_la-ssl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttp2_asio_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttp2_asio_la-ssl.lo `test -f 'ssl.cc' || echo '$(srcdir)/'`ssl.cc

libnghttp2_asio_la-asio_common.lo: asio_common.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttp2_asio_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttp2_asio_la-asio_common.lo -MD -MP -MF $(DEPDIR)/libnghttp2_asio_la-asio_common.Tpo -c -o libnghttp2_asio_la-asio_common.lo `test -f 'asio_common.cc' || echo '$(srcdir)/'`asio_common.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttp2_asio_la-asio_common.Tpo $(DEPDIR)/libnghttp2_asio_la-asio_common.Plo
#	$(AM_V_CXX)source='asio_common.cc' object='libnghttp2_asio_la-asio_common.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttp2_asio_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttp2_asio_la-asio_common.lo `test -f 'asio_common.cc' || echo '$(srcdir)/'`asio_common.cc

libnghttp2_asio_la-asio_io_service_pool.lo: asio_io_service_pool.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttp2_asio_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttp2_asio_la-asio_io_service_pool.lo -MD -MP -MF $(DEPDIR)/libnghttp2_asio_la-asio_io_service_pool.Tpo -c -o libnghttp2_asio_la-asio_io_service_pool.lo `test -f 'asio_io_service_pool.cc' || echo '$(srcdir)/'`asio_io_service_pool.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttp2_asio_la-asio_io_service_pool.Tpo $(DEPDIR)/libnghttp2_asio_la-asio_io_service_pool.Plo
#	$(AM_V_CXX)source='asio_io_service_pool.cc' object='libnghttp2_asio_la-asio_io_service_pool.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttp2_asio_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttp2_asio_la-asio_io_service_pool.lo `test -f 'asio_io_service_pool.cc' || echo '$(srcdir)/'`asio_io_service_pool.cc

libnghttp2_asio_la-asio_server_http2.lo: asio_server_http2.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttp2_asio_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttp2_asio_la-asio_server_http2.lo -MD -MP -MF $(DEPDIR)/libnghttp2_asio_la-asio_server_http2.Tpo -c -o libnghttp2_asio_la-asio_server_http2.lo `test -f 'asio_server_http2.cc' || echo '$(srcdir)/'`asio_server_http2.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttp2_asio_la-asio_server_http2.Tpo $(DEPDIR)/libnghttp2_asio_la-asio_server_http2.Plo
#	$(AM_V_CXX)source='asio_server_http2.cc' object='libnghttp2_asio_la-asio_server_http2.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttp2_asio_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttp2_asio_la-asio_server_http2.lo `test -f 'asio_server_http2.cc' || echo '$(srcdir)/'`asio_server_http2.cc

libnghttp2_asio_la-asio_server_http2_impl.lo: asio_server_http2_impl.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttp2_asio_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttp2_asio_la-asio_server_http2_impl.lo -MD -MP -MF $(DEPDIR)/libnghttp2_asio_la-asio_server_http2_impl.Tpo -c -o libnghttp2_asio_la-asio_server_http2_impl.lo `test -f 'asio_server_http2_impl.cc' || echo '$(srcdir)/'`asio_server_http2_impl.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttp2_asio_la-asio_server_http2_impl.Tpo $(DEPDIR)/libnghttp2_asio_la-asio_server_http2_impl.Plo
#	$(AM_V_CXX)source='asio_server_http2_impl.cc' object='libnghttp2_asio_la-asio_server_http2_impl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttp2_asio_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttp2_asio_la-asio_server_http2_impl.lo `test -f 'asio_server_http2_impl.cc' || echo '$(srcdir)/'`asio_server_http2_impl.cc

libnghttp2_asio_la-asio_server.lo: asio_server.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttp2_asio_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttp2_asio_la-asio_server.lo -MD -MP -MF $(DEPDIR)/libnghttp2_asio_la-asio_server.Tpo -c -o libnghttp2_asio_la-asio_server.lo `test -f 'asio_server.cc' || echo '$(srcdir)/'`asio_server.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttp2_asio_la-asio_server.Tpo $(DEPDIR)/libnghttp2_asio_la-asio_server.Plo
#	$(AM_V_CXX)source='asio_server.cc' object='libnghttp2_asio_la-asio_server.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttp2_asio_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttp2_asio_la-asio_server.lo `test -f 'asio_server.cc' || echo '$(srcdir)/'`asio_server.cc

libnghttp2_asio_la-asio_server_http2_handler.lo: asio_server_http2_handler.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttp2_asio_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttp2_asio_la-asio_server_http2_handler.lo -MD -MP -MF $(DEPDIR)/libnghttp2_asio_la-asio_server_http2_handler.Tpo -c -o libnghttp2_asio_la-asio_server_http2_handler.lo `test -f 'asio_server_http2_handler.cc' || echo '$(srcdir)/'`asio_server_http2_handler.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttp2_asio_la-asio_server_http2_handler.Tpo $(DEPDIR)/libnghttp2_asio_la-asio_server_http2_handler.Plo
#	$(AM_V_CXX)source='asio_server_http2_handler.cc' object='libnghttp2_asio_la-asio_server_http2_handler.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttp2_asio_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttp2_asio_la-asio_server_http2_handler.lo `test -f 'asio_server_http2_handler.cc' || echo '$(srcdir)/'`asio_server_http2_handler.cc

libnghttp2_asio_la-asio_server_request.lo: asio_server_request.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttp2_asio_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttp2_asio_la-asio_server_request.lo -MD -MP -MF $(DEPDIR)/libnghttp2_asio_la-asio_server_request.Tpo -c -o libnghttp2_asio_la-asio_server_request.lo `test -f 'asio_server_request.cc' || echo '$(srcdir)/'`asio_server_request.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttp2_asio_la-asio_server_request.Tpo $(DEPDIR)/libnghttp2_asio_la-asio_server_request.Plo
#	$(AM_V_CXX)source='asio_server_request.cc' object='libnghttp2_asio_la-asio_server_request.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttp2_asio_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttp2_asio_la-asio_server_request.lo `test -f 'asio_server_request.cc' || echo '$(srcdir)/'`asio_server_request.cc

libnghttp2_asio_la-asio_server_request_impl.lo: asio_server_request_impl.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttp2_asio_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttp2_asio_la-asio_server_request_impl.lo -MD -MP -MF $(DEPDIR)/libnghttp2_asio_la-asio_server_request_impl.Tpo -c -o libnghttp2_asio_la-asio_server_request_impl.lo `test -f 'asio_server_request_impl.cc' || echo '$(srcdir)/'`asio_server_request_impl.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttp2_asio_la-asio_server_request_impl.Tpo $(DEPDIR)/libnghttp2_asio_la-asio_server_request_impl.Plo
#	$(AM_V_CXX)source='asio_server_request_impl.cc' object='libnghttp2_asio_la-asio_server_request_impl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttp2_asio_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttp2_asio_la-asio_server_request_impl.lo `test -f 'asio_server_request_impl.cc' || echo '$(srcdir)/'`asio_server_request_impl.cc

libnghttp2_asio_la-asio_server_response.lo: asio_server_response.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttp2_asio_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttp2_asio_la-asio_server_response.lo -MD -MP -MF $(DEPDIR)/libnghttp2_asio_la-asio_server_response.Tpo -c -o libnghttp2_asio_la-asio_server_response.lo `test -f 'asio_server_response.cc' || echo '$(srcdir)/'`asio_server_response.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttp2_asio_la-asio_server_response.Tpo $(DEPDIR)/libnghttp2_asio_la-asio_server_response.Plo
#	$(AM_V_CXX)source='asio_server_response.cc' object='libnghttp2_asio_la-asio_server_response.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttp2_asio_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttp2_asio_la-asio_server_response.lo `test -f 'asio_server_response.cc' || echo '$(srcdir)/'`asio_server_response.cc

libnghttp2_asio_la-asio_server_response_impl.lo: asio_server_response_impl.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttp2_asio_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttp2_asio_la-asio_server_response_impl.lo -MD -MP -MF $(DEPDIR)/libnghttp2_asio_la-asio_server_response_impl.Tpo -c -o libnghttp2_asio_la-asio_server_response_impl.lo `test -f 'asio_server_response_impl.cc' || echo '$(srcdir)/'`asio_server_response_impl.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttp2_asio_la-asio_server_response_impl.Tpo $(DEPDIR)/libnghttp2_asio_la-asio_server_response_impl.Plo
#	$(AM_V_CXX)source='asio_server_response_impl.cc' object='libnghttp2_asio_la-asio_server_response_impl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttp2_asio_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttp2_asio_la-asio_server_response_impl.lo `test -f 'asio_server_response_impl.cc' || echo '$(srcdir)/'`asio_server_response_impl.cc

libnghttp2_asio_la-asio_server_stream.lo: asio_server_stream.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttp2_asio_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttp2_asio_la-asio_server_stream.lo -MD -MP -MF $(DEPDIR)/libnghttp2_asio_la-asio_server_stream.Tpo -c -o libnghttp2_asio_la-asio_server_stream.lo `test -f 'asio_server_stream.cc' || echo '$(srcdir)/'`asio_server_stream.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttp2_asio_la-asio_server_stream.Tpo $(DEPDIR)/libnghttp2_asio_la-asio_server_stream.Plo
#	$(AM_V_CXX)source='asio_server_stream.cc' object='libnghttp2_asio_la-asio_server_stream.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttp2_asio_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttp2_asio_la-asio_server_stream.lo `test -f 'asio_server_stream.cc' || echo '$(srcdir)/'`asio_server_stream.cc

libnghttp2_asio_la-asio_server_serve_mux.lo: asio_server_serve_mux.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttp2_asio_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttp2_asio_la-asio_server_serve_mux.lo -MD -MP -MF $(DEPDIR)/libnghttp2_asio_la-asio_server_serve_mux.Tpo -c -o libnghttp2_asio_la-asio_server_serve_mux.lo `test -f 'asio_server_serve_mux.cc' || echo '$(srcdir)/'`asio_server_serve_mux.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttp2_asio_la-asio_server_serve_mux.Tpo $(DEPDIR)/libnghttp2_asio_la-asio_server_serve_mux.Plo
#	$(AM_V_CXX)source='asio_server_serve_mux.cc' object='libnghttp2_asio_la-asio_server_serve_mux.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttp2_asio_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttp2_asio_la-asio_server_serve_mux.lo `test -f 'asio_server_serve_mux.cc' || echo '$(srcdir)/'`asio_server_serve_mux.cc

libnghttp2_asio_la-asio_server_request_handler.lo: asio_server_request_handler.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttp2_asio_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttp2_asio_la-asio_server_request_handler.lo -MD -MP -MF $(DEPDIR)/libnghttp2_asio_la-asio_server_request_handler.Tpo -c -o libnghttp2_asio_la-asio_server_request_handler.lo `test -f 'asio_server_request_handler.cc' || echo '$(srcdir)/'`asio_server_request_handler.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttp2_asio_la-asio_server_request_handler.Tpo $(DEPDIR)/libnghttp2_asio_la-asio_server_request_handler.Plo
#	$(AM_V_CXX)source='asio_server_request_handler.cc' object='libnghttp2_asio_la-asio_server_request_handler.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttp2_asio_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttp2_asio_la-asio_server_request_handler.lo `test -f 'asio_server_request_handler.cc' || echo '$(srcdir)/'`asio_server_request_handler.cc

libnghttp2_asio_la-asio_server_tls_context.lo: asio_server_tls_context.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttp2_asio_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttp2_asio_la-asio_server_tls_context.lo -MD -MP -MF $(DEPDIR)/libnghttp2_asio_la-asio_server_tls_context.Tpo -c -o libnghttp2_asio_la-asio_server_tls_context.lo `test -f 'asio_server_tls_context.cc' || echo '$(srcdir)/'`asio_server_tls_context.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttp2_asio_la-asio_server_tls_context.Tpo $(DEPDIR)/libnghttp2_asio_la-asio_server_tls_context.Plo
#	$(AM_V_CXX)source='asio_server_tls_context.cc' object='libnghttp2_asio_la-asio_server_tls_context.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttp2_asio_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttp2_asio_la-asio_server_tls_context.lo `test -f 'asio_server_tls_context.cc' || echo '$(srcdir)/'`asio_server_tls_context.cc

libnghttp2_asio_la-asio_client_session.lo: asio_client_session.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttp2_asio_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttp2_asio_la-asio_client_session.lo -MD -MP -MF $(DEPDIR)/libnghttp2_asio_la-asio_client_session.Tpo -c -o libnghttp2_asio_la-asio_client_session.lo `test -f 'asio_client_session.cc' || echo '$(srcdir)/'`asio_client_session.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttp2_asio_la-asio_client_session.Tpo $(DEPDIR)/libnghttp2_asio_la-asio_client_session.Plo
#	$(AM_V_CXX)source='asio_client_session.cc' object='libnghttp2_asio_la-asio_client_session.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttp2_asio_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttp2_asio_la-asio_client_session.lo `test -f 'asio_client_session.cc' || echo '$(srcdir)/'`asio_client_session.cc

libnghttp2_asio_la-asio_client_session_impl.lo: asio_client_session_impl.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttp2_asio_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttp2_asio_la-asio_client_session_impl.lo -MD -MP -MF $(DEPDIR)/libnghttp2_asio_la-asio_client_session_impl.Tpo -c -o libnghttp2_asio_la-asio_client_session_impl.lo `test -f 'asio_client_session_impl.cc' || echo '$(srcdir)/'`asio_client_session_impl.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttp2_asio_la-asio_client_session_impl.Tpo $(DEPDIR)/libnghttp2_asio_la-asio_client_session_impl.Plo
#	$(AM_V_CXX)source='asio_client_session_impl.cc' object='libnghttp2_asio_la-asio_client_session_impl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttp2_asio_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttp2_asio_la-asio_client_session_impl.lo `test -f 'asio_client_session_impl.cc' || echo '$(srcdir)/'`asio_client_session_impl.cc

libnghttp2_asio_la-asio_client_session_tcp_impl.lo: asio_client_session_tcp_impl.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttp2_asio_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttp2_asio_la-asio_client_session_tcp_impl.lo -MD -MP -MF $(DEPDIR)/libnghttp2_asio_la-asio_client_session_tcp_impl.Tpo -c -o libnghttp2_asio_la-asio_client_session_tcp_impl.lo `test -f 'asio_client_session_tcp_impl.cc' || echo '$(srcdir)/'`asio_client_session_tcp_impl.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttp2_asio_la-asio_client_session_tcp_impl.Tpo $(DEPDIR)/libnghttp2_asio_la-asio_client_session_tcp_impl.Plo
#	$(AM_V_CXX)source='asio_client_session_tcp_impl.cc' object='libnghttp2_asio_la-asio_client_session_tcp_impl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttp2_asio_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttp2_asio_la-asio_client_session_tcp_impl.lo `test -f 'asio_client_session_tcp_impl.cc' || echo '$(srcdir)/'`asio_client_session_tcp_impl.cc

libnghttp2_asio_la-asio_client_session_tls_impl.lo: asio_client_session_tls_impl.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttp2_asio_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttp2_asio_la-asio_client_session_tls_impl.lo -MD -MP -MF $(DEPDIR)/libnghttp2_asio_la-asio_client_session_tls_impl.Tpo -c -o libnghttp2_asio_la-asio_client_session_tls_impl.lo `test -f 'asio_client_session_tls_impl.cc' || echo '$(srcdir)/'`asio_client_session_tls_impl.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttp2_asio_la-asio_client_session_tls_impl.Tpo $(DEPDIR)/libnghttp2_asio_la-asio_client_session_tls_impl.Plo
#	$(AM_V_CXX)source='asio_client_session_tls_impl.cc' object='libnghttp2_asio_la-asio_client_session_tls_impl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttp2_asio_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttp2_asio_la-asio_client_session_tls_impl.lo `test -f 'asio_client_session_tls_impl.cc' || echo '$(srcdir)/'`asio_client_session_tls_impl.cc

libnghttp2_asio_la-asio_client_response.lo: asio_client_response.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttp2_asio_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttp2_asio_la-asio_client_response.lo -MD -MP -MF $(DEPDIR)/libnghttp2_asio_la-asio_client_response.Tpo -c -o libnghttp2_asio_la-asio_client_response.lo `test -f 'asio_client_response.cc' || echo '$(srcdir)/'`asio_client_response.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttp2_asio_la-asio_client_response.Tpo $(DEPDIR)/libnghttp2_asio_la-asio_client_response.Plo
#	$(AM_V_CXX)source='asio_client_response.cc' object='libnghttp2_asio_la-asio_client_response.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttp2_asio_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttp2_asio_la-asio_client_response.lo `test -f 'asio_client_response.cc' || echo '$(srcdir)/'`asio_client_response.cc

libnghttp2_asio_la-asio_client_response_impl.lo: asio_client_response_impl.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttp2_asio_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttp2_asio_la-asio_client_response_impl.lo -MD -MP -MF $(DEPDIR)/libnghttp2_asio_la-asio_client_response_impl.Tpo -c -o libnghttp2_asio_la-asio_client_response_impl.lo `test -f 'asio_client_response_impl.cc' || echo '$(srcdir)/'`asio_client_response_impl.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttp2_asio_la-asio_client_response_impl.Tpo $(DEPDIR)/libnghttp2_asio_la-asio_client_response_impl.Plo
#	$(AM_V_CXX)source='asio_client_response_impl.cc' object='libnghttp2_asio_la-asio_client_response_impl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttp2_asio_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttp2_asio_la-asio_client_response_impl.lo `test -f 'asio_client_response_impl.cc' || echo '$(srcdir)/'`asio_client_response_impl.cc

libnghttp2_asio_la-asio_client_request.lo: asio_client_request.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttp2_asio_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttp2_asio_la-asio_client_request.lo -MD -MP -MF $(DEPDIR)/libnghttp2_asio_la-asio_client_request.Tpo -c -o libnghttp2_asio_la-asio_client_request.lo `test -f 'asio_client_request.cc' || echo '$(srcdir)/'`asio_client_request.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttp2_asio_la-asio_client_request.Tpo $(DEPDIR)/libnghttp2_asio_la-asio_client_request.Plo
#	$(AM_V_CXX)source='asio_client_request.cc' object='libnghttp2_asio_la-asio_client_request.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttp2_asio_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttp2_asio_la-asio_client_request.lo `test -f 'asio_client_request.cc' || echo '$(srcdir)/'`asio_client_request.cc

libnghttp2_asio_la-asio_client_request_impl.lo: asio_client_request_impl.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttp2_asio_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttp2_asio_la-asio_client_request_impl.lo -MD -MP -MF $(DEPDIR)/libnghttp2_asio_la-asio_client_request_impl.Tpo -c -o libnghttp2_asio_la-asio_client_request_impl.lo `test -f 'asio_client_request_impl.cc' || echo '$(srcdir)/'`asio_client_request_impl.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttp2_asio_la-asio_client_request_impl.Tpo $(DEPDIR)/libnghttp2_asio_la-asio_client_request_impl.Plo
#	$(AM_V_CXX)source='asio_client_request_impl.cc' object='libnghttp2_asio_la-asio_client_request_impl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttp2_asio_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttp2_asio_la-asio_client_request_impl.lo `test -f 'asio_client_request_impl.cc' || echo '$(srcdir)/'`asio_client_request_impl.cc

libnghttp2_asio_la-asio_client_stream.lo: asio_client_stream.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttp2_asio_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttp2_asio_la-asio_client_stream.lo -MD -MP -MF $(DEPDIR)/libnghttp2_asio_la-asio_client_stream.Tpo -c -o libnghttp2_asio_la-asio_client_stream.lo `test -f 'asio_client_stream.cc' || echo '$(srcdir)/'`asio_client_stream.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttp2_asio_la-asio_client_stream.Tpo $(DEPDIR)/libnghttp2_asio_la-asio_client_stream.Plo
#	$(AM_V_CXX)source='asio_client_stream.cc' object='libnghttp2_asio_la-asio_client_stream.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttp2_asio_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttp2_asio_la-asio_client_stream.lo `test -f 'asio_client_stream.cc' || echo '$(srcdir)/'`asio_client_stream.cc

libnghttp2_asio_la-asio_client_tls_context.lo: asio_client_tls_context.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttp2_asio_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnghttp2_asio_la-asio_client_tls_context.lo -MD -MP -MF $(DEPDIR)/libnghttp2_asio_la-asio_client_tls_context.Tpo -c -o libnghttp2_asio_la-asio_client_tls_context.lo `test -f 'asio_client_tls_context.cc' || echo '$(srcdir)/'`asio_client_tls_context.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnghttp2_asio_la-asio_client_tls_context.Tpo $(DEPDIR)/libnghttp2_asio_la-asio_client_tls_context.Plo
#	$(AM_V_CXX)source='asio_client_tls_context.cc' object='libnghttp2_asio_la-asio_client_tls_context.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnghttp2_asio_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnghttp2_asio_la-asio_client_tls_context.lo `test -f 'asio_client_tls_context.cc' || echo '$(srcdir)/'`asio_client_tls_context.cc

nghttpx-shrpx.o: shrpx.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(nghttpx_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT nghttpx-shrpx.o -MD -MP -MF $(DEPDIR)/nghttpx-shrpx.Tpo -c -o nghttpx-shrpx.o `test -f 'shrpx.cc' || echo '$(srcdir)/'`shrpx.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/nghttpx-shrpx.Tpo $(DEPDIR)/nghttpx-shrpx.Po
#	$(AM_V_CXX)source='shrpx.cc' object='nghttpx-shrpx.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(nghttpx_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o nghttpx-shrpx.o `test -f 'shrpx.cc' || echo '$(srcdir)/'`shrpx.cc

nghttpx-shrpx.obj: shrpx.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(nghttpx_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT nghttpx-shrpx.obj -MD -MP -MF $(DEPDIR)/nghttpx-shrpx.Tpo -c -o nghttpx-shrpx.obj `if test -f 'shrpx.cc'; then $(CYGPATH_W) 'shrpx.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/nghttpx-shrpx.Tpo $(DEPDIR)/nghttpx-shrpx.Po
#	$(AM_V_CXX)source='shrpx.cc' object='nghttpx-shrpx.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(nghttpx_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o nghttpx-shrpx.obj `if test -f 'shrpx.cc'; then $(CYGPATH_W) 'shrpx.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx.cc'; fi`

nghttpx_unittest-shrpx-unittest.o: shrpx-unittest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(nghttpx_unittest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT nghttpx_unittest-shrpx-unittest.o -MD -MP -MF $(DEPDIR)/nghttpx_unittest-shrpx-unittest.Tpo -c -o nghttpx_unittest-shrpx-unittest.o `test -f 'shrpx-unittest.cc' || echo '$(srcdir)/'`shrpx-unittest.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/nghttpx_unittest-shrpx-unittest.Tpo $(DEPDIR)/nghttpx_unittest-shrpx-unittest.Po
#	$(AM_V_CXX)source='shrpx-unittest.cc' object='nghttpx_unittest-shrpx-unittest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(nghttpx_unittest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o nghttpx_unittest-shrpx-unittest.o `test -f 'shrpx-unittest.cc' || echo '$(srcdir)/'`shrpx-unittest.cc

nghttpx_unittest-shrpx-unittest.obj: shrpx-unittest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(nghttpx_unittest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT nghttpx_unittest-shrpx-unittest.obj -MD -MP -MF $(DEPDIR)/nghttpx_unittest-shrpx-unittest.Tpo -c -o nghttpx_unittest-shrpx-unittest.obj `if test -f 'shrpx-unittest.cc'; then $(CYGPATH_W) 'shrpx-unittest.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx-unittest.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/nghttpx_unittest-shrpx-unittest.Tpo $(DEPDIR)/nghttpx_unittest-shrpx-unittest.Po
#	$(AM_V_CXX)source='shrpx-unittest.cc' object='nghttpx_unittest-shrpx-unittest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(nghttpx_unittest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o nghttpx_unittest-shrpx-unittest.obj `if test -f 'shrpx-unittest.cc'; then $(CYGPATH_W) 'shrpx-unittest.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx-unittest.cc'; fi`

nghttpx_unittest-shrpx_ssl_test.o: shrpx_ssl_test.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(nghttpx_unittest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT nghttpx_unittest-shrpx_ssl_test.o -MD -MP -MF $(DEPDIR)/nghttpx_unittest-shrpx_ssl_test.Tpo -c -o nghttpx_unittest-shrpx_ssl_test.o `test -f 'shrpx_ssl_test.cc' || echo '$(srcdir)/'`shrpx_ssl_test.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/nghttpx_unittest-shrpx_ssl_test.Tpo $(DEPDIR)/nghttpx_unittest-shrpx_ssl_test.Po
#	$(AM_V_CXX)source='shrpx_ssl_test.cc' object='nghttpx_unittest-shrpx_ssl_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(nghttpx_unittest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o nghttpx_unittest-shrpx_ssl_test.o `test -f 'shrpx_ssl_test.cc' || echo '$(srcdir)/'`shrpx_ssl_test.cc

nghttpx_unittest-shrpx_ssl_test.obj: shrpx_ssl_test.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(nghttpx_unittest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT nghttpx_unittest-shrpx_ssl_test.obj -MD -MP -MF $(DEPDIR)/nghttpx_unittest-shrpx_ssl_test.Tpo -c -o nghttpx_unittest-shrpx_ssl_test.obj `if test -f 'shrpx_ssl_test.cc'; then $(CYGPATH_W) 'shrpx_ssl_test.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx_ssl_test.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/nghttpx_unittest-shrpx_ssl_test.Tpo $(DEPDIR)/nghttpx_unittest-shrpx_ssl_test.Po
#	$(AM_V_CXX)source='shrpx_ssl_test.cc' object='nghttpx_unittest-shrpx_ssl_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(nghttpx_unittest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o nghttpx_unittest-shrpx_ssl_test.obj `if test -f 'shrpx_ssl_test.cc'; then $(CYGPATH_W) 'shrpx_ssl_test.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx_ssl_test.cc'; fi`

nghttpx_unittest-shrpx_downstream_test.o: shrpx_downstream_test.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(nghttpx_unittest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT nghttpx_unittest-shrpx_downstream_test.o -MD -MP -MF $(DEPDIR)/nghttpx_unittest-shrpx_downstream_test.Tpo -c -o nghttpx_unittest-shrpx_downstream_test.o `test -f 'shrpx_downstream_test.cc' || echo '$(srcdir)/'`shrpx_downstream_test.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/nghttpx_unittest-shrpx_downstream_test.Tpo $(DEPDIR)/nghttpx_unittest-shrpx_downstream_test.Po
#	$(AM_V_CXX)source='shrpx_downstream_test.cc' object='nghttpx_unittest-shrpx_downstream_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(nghttpx_unittest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o nghttpx_unittest-shrpx_downstream_test.o `test -f 'shrpx_downstream_test.cc' || echo '$(srcdir)/'`shrpx_downstream_test.cc

nghttpx_unittest-shrpx_downstream_test.obj: shrpx_downstream_test.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(nghttpx_unittest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT nghttpx_unittest-shrpx_downstream_test.obj -MD -MP -MF $(DEPDIR)/nghttpx_unittest-shrpx_downstream_test.Tpo -c -o nghttpx_unittest-shrpx_downstream_test.obj `if test -f 'shrpx_downstream_test.cc'; then $(CYGPATH_W) 'shrpx_downstream_test.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx_downstream_test.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/nghttpx_unittest-shrpx_downstream_test.Tpo $(DEPDIR)/nghttpx_unittest-shrpx_downstream_test.Po
#	$(AM_V_CXX)source='shrpx_downstream_test.cc' object='nghttpx_unittest-shrpx_downstream_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(nghttpx_unittest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o nghttpx_unittest-shrpx_downstream_test.obj `if test -f 'shrpx_downstream_test.cc'; then $(CYGPATH_W) 'shrpx_downstream_test.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx_downstream_test.cc'; fi`

nghttpx_unittest-shrpx_config_test.o: shrpx_config_test.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(nghttpx_unittest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT nghttpx_unittest-shrpx_config_test.o -MD -MP -MF $(DEPDIR)/nghttpx_unittest-shrpx_config_test.Tpo -c -o nghttpx_unittest-shrpx_config_test.o `test -f 'shrpx_config_test.cc' || echo '$(srcdir)/'`shrpx_config_test.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/nghttpx_unittest-shrpx_config_test.Tpo $(DEPDIR)/nghttpx_unittest-shrpx_config_test.Po
#	$(AM_V_CXX)source='shrpx_config_test.cc' object='nghttpx_unittest-shrpx_config_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(nghttpx_unittest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o nghttpx_unittest-shrpx_config_test.o `test -f 'shrpx_config_test.cc' || echo '$(srcdir)/'`shrpx_config_test.cc

nghttpx_unittest-shrpx_config_test.obj: shrpx_config_test.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(nghttpx_unittest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT nghttpx_unittest-shrpx_config_test.obj -MD -MP -MF $(DEPDIR)/nghttpx_unittest-shrpx_config_test.Tpo -c -o nghttpx_unittest-shrpx_config_test.obj `if test -f 'shrpx_config_test.cc'; then $(CYGPATH_W) 'shrpx_config_test.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx_config_test.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/nghttpx_unittest-shrpx_config_test.Tpo $(DEPDIR)/nghttpx_unittest-shrpx_config_test.Po
#	$(AM_V_CXX)source='shrpx_config_test.cc' object='nghttpx_unittest-shrpx_config_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(nghttpx_unittest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o nghttpx_unittest-shrpx_config_test.obj `if test -f 'shrpx_config_test.cc'; then $(CYGPATH_W) 'shrpx_config_test.cc'; else $(CYGPATH_W) '$(srcdir)/shrpx_config_test.cc'; fi`

nghttpx_unittest-http2_test.o: http2_test.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(nghttpx_unittest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT nghttpx_unittest-http2_test.o -MD -MP -MF $(DEPDIR)/nghttpx_unittest-http2_test.Tpo -c -o nghttpx_unittest-http2_test.o `test -f 'http2_test.cc' || echo '$(srcdir)/'`http2_test.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/nghttpx_unittest-http2_test.Tpo $(DEPDIR)/nghttpx_unittest-http2_test.Po
#	$(AM_V_CXX)source='http2_test.cc' object='nghttpx_unittest-http2_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(nghttpx_unittest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o nghttpx_unittest-http2_test.o `test -f 'http2_test.cc' || echo '$(srcdir)/'`http2_test.cc

nghttpx_unittest-http2_test.obj: http2_test.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(nghttpx_unittest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT nghttpx_unittest-http2_test.obj -MD -MP -MF $(DEPDIR)/nghttpx_unittest-http2_test.Tpo -c -o nghttpx_unittest-http2_test.obj `if test -f 'http2_test.cc'; then $(CYGPATH_W) 'http2_test.cc'; else $(CYGPATH_W) '$(srcdir)/http2_test.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/nghttpx_unittest-http2_test.Tpo $(DEPDIR)/nghttpx_unittest-http2_test.Po
#	$(AM_V_CXX)source='http2_test.cc' object='nghttpx_unittest-http2_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(nghttpx_unittest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o nghttpx_unittest-http2_test.obj `if test -f 'http2_test.cc'; then $(CYGPATH_W) 'http2_test.cc'; else $(CYGPATH_W) '$(srcdir)/http2_test.cc'; fi`

nghttpx_unittest-util_test.o: util_test.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(nghttpx_unittest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT nghttpx_unittest-util_test.o -MD -MP -MF $(DEPDIR)/nghttpx_unittest-util_test.Tpo -c -o nghttpx_unittest-util_test.o `test -f 'util_test.cc' || echo '$(srcdir)/'`util_test.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/nghttpx_unittest-util_test.Tpo $(DEPDIR)/nghttpx_unittest-util_test.Po
#	$(AM_V_CXX)source='util_test.cc' object='nghttpx_unittest-util_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(nghttpx_unittest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o nghttpx_unittest-util_test.o `test -f 'util_test.cc' || echo '$(srcdir)/'`util_test.cc

nghttpx_unittest-util_test.obj: util_test.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(nghttpx_unittest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT nghttpx_unittest-util_test.obj -MD -MP -MF $(DEPDIR)/nghttpx_unittest-util_test.Tpo -c -o nghttpx_unittest-util_test.obj `if test -f 'util_test.cc'; then $(CYGPATH_W) 'util_test.cc'; else $(CYGPATH_W) '$(srcdir)/util_test.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/nghttpx_unittest-util_test.Tpo $(DEPDIR)/nghttpx_unittest-util_test.Po
#	$(AM_V_CXX)source='util_test.cc' object='nghttpx_unittest-util_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(nghttpx_unittest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o nghttpx_unittest-util_test.obj `if test -f 'util_test.cc'; then $(CYGPATH_W) 'util_test.cc'; else $(CYGPATH_W) '$(srcdir)/util_test.cc'; fi`

nghttpx_unittest-buffer_test.o: buffer_test.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(nghttpx_unittest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT nghttpx_unittest-buffer_test.o -MD -MP -MF $(DEPDIR)/nghttpx_unittest-buffer_test.Tpo -c -o nghttpx_unittest-buffer_test.o `test -f 'buffer_test.cc' || echo '$(srcdir)/'`buffer_test.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/nghttpx_unittest-buffer_test.Tpo $(DEPDIR)/nghttpx_unittest-buffer_test.Po
#	$(AM_V_CXX)source='buffer_test.cc' object='nghttpx_unittest-buffer_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(nghttpx_unittest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o nghttpx_unittest-buffer_test.o `test -f 'buffer_test.cc' || echo '$(srcdir)/'`buffer_test.cc

nghttpx_unittest-buffer_test.obj: buffer_test.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(nghttpx_unittest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT nghttpx_unittest-buffer_test.obj -MD -MP -MF $(DEPDIR)/nghttpx_unittest-buffer_test.Tpo -c -o nghttpx_unittest-buffer_test.obj `if test -f 'buffer_test.cc'; then $(CYGPATH_W) 'buffer_test.cc'; else $(CYGPATH_W) '$(srcdir)/buffer_test.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/nghttpx_unittest-buffer_test.Tpo $(DEPDIR)/nghttpx_unittest-buffer_test.Po
#	$(AM_V_CXX)source='buffer_test.cc' object='nghttpx_unittest-buffer_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(nghttpx_unittest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o nghttpx_unittest-buffer_test.obj `if test -f 'buffer_test.cc'; then $(CYGPATH_W) 'buffer_test.cc'; else $(CYGPATH_W) '$(srcdir)/buffer_test.cc'; fi`

nghttpx_unittest-memchunk_test.o: memchunk_test.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(nghttpx_unittest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT nghttpx_unittest-memchunk_test.o -MD -MP -MF $(DEPDIR)/nghttpx_unittest-memchunk_test.Tpo -c -o nghttpx_unittest-memchunk_test.o `test -f 'memchunk_test.cc' || echo '$(srcdir)/'`memchunk_test.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/nghttpx_unittest-memchunk_test.Tpo $(DEPDIR)/nghttpx_unittest-memchunk_test.Po
#	$(AM_V_CXX)source='memchunk_test.cc' object='nghttpx_unittest-memchunk_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(nghttpx_unittest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o nghttpx_unittest-memchunk_test.o `test -f 'memchunk_test.cc' || echo '$(srcdir)/'`memchunk_test.cc

nghttpx_unittest-memchunk_test.obj: memchunk_test.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(nghttpx_unittest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT nghttpx_unittest-memchunk_test.obj -MD -MP -MF $(DEPDIR)/nghttpx_unittest-memchunk_test.Tpo -c -o nghttpx_unittest-memchunk_test.obj `if test -f 'memchunk_test.cc'; then $(CYGPATH_W) 'memchunk_test.cc'; else $(CYGPATH_W) '$(srcdir)/memchunk_test.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/nghttpx_unittest-memchunk_test.Tpo $(DEPDIR)/nghttpx_unittest-memchunk_test.Po
#	$(AM_V_CXX)source='memchunk_test.cc' object='nghttpx_unittest-memchunk_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(nghttpx_unittest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o nghttpx_unittest-memchunk_test.obj `if test -f 'memchunk_test.cc'; then $(CYGPATH_W) 'memchunk_test.cc'; else $(CYGPATH_W) '$(srcdir)/memchunk_test.cc'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-pkgconfigDATA: $(pkgconfig_DATA)
	@$(NORMAL_INSTALL)
	@list='$(pkgconfig_DATA)'; test -n "$(pkgconfigdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgconfigdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgconfigdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pkgconfigdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pkgconfigdir)" || exit $$?; \
	done

uninstall-pkgconfigDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(pkgconfig_DATA)'; test -n "$(pkgconfigdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgconfigdir)'; $(am__uninstall_files_from_dir)

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"
it-local: 
itprep-local: 

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	else \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS:
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_PROGRAMS)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
nghttpx-unittest.log: nghttpx-unittest$(EXEEXT)
	@p='nghttpx-unittest$(EXEEXT)'; \
	b='nghttpx-unittest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
#.test$(EXEEXT).log:
#	@p='$<'; \
#	$(am__set_b); \
#	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
#	--log-file $$b.log --trs-file $$b.trs \
#	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
#	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-recursive
all-am: Makefile $(LIBRARIES) $(LTLIBRARIES) $(PROGRAMS) $(DATA)
install-binPROGRAMS: install-libLTLIBRARIES

installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(pkgconfigdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-checkPROGRAMS clean-generic \
	clean-libLTLIBRARIES clean-libtool clean-noinstLIBRARIES \
	mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am: install-pkgconfigDATA

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-binPROGRAMS install-libLTLIBRARIES

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

it: it-recursive

it-am: it-local

itprep: itprep-recursive

itprep-am: itprep-local

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-libLTLIBRARIES \
	uninstall-pkgconfigDATA

.MAKE: $(am__recursive_targets) check-am install-am install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am check \
	check-TESTS check-am clean clean-binPROGRAMS \
	clean-checkPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool clean-noinstLIBRARIES cscopelist-am ctags \
	ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-libLTLIBRARIES \
	install-man install-pdf install-pdf-am install-pkgconfigDATA \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs installdirs-am it-am it-local \
	itprep-am itprep-local maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	recheck tags tags-am uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-libLTLIBRARIES \
	uninstall-pkgconfigDATA


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
